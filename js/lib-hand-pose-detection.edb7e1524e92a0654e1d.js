/*! For license information please see lib-hand-pose-detection.edb7e1524e92a0654e1d.js.LICENSE.txt */
"use strict";(self.webpackChunktheremin=self.webpackChunktheremin||[]).push([[572],{8399:(t,e,n)=>{n.d(e,{o:()=>Gt,c:()=>se}),n(5389),n(3807);var a=n(5073),r=n(9839),s=n(5912);(function(){var t;function e(t){var e=0;return function(){return e<t.length?{done:!1,value:t[e++]}:{done:!0}}}var n="function"==typeof Object.defineProperties?Object.defineProperty:function(t,e,n){return t==Array.prototype||t==Object.prototype||(t[e]=n.value),t},r=function(t){t=["object"==typeof globalThis&&globalThis,t,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof a.c&&a.c];for(var e=0;e<t.length;++e){var n=t[e];if(n&&n.Math==Math)return n}throw Error("Cannot find global object")}(this);function s(t,e){if(e)t:{var a=r;t=t.split(".");for(var s=0;s<t.length-1;s++){var o=t[s];if(!(o in a))break t;a=a[o]}(e=e(s=a[t=t[t.length-1]]))!=s&&null!=e&&n(a,t,{configurable:!0,writable:!0,value:e})}}function o(t){return(t={next:t})[Symbol.iterator]=function(){return this},t}function i(t){var n="undefined"!=typeof Symbol&&Symbol.iterator&&t[Symbol.iterator];return n?n.call(t):{next:e(t)}}function p(t){if(!(t instanceof Array)){t=i(t);for(var e,n=[];!(e=t.next()).done;)n.push(e.value);t=n}return t}s("Symbol",(function(t){function e(t,e){this.g=t,n(this,"description",{configurable:!0,writable:!0,value:e})}if(t)return t;e.prototype.toString=function(){return this.g};var a="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",r=0;return function t(n){if(this instanceof t)throw new TypeError("Symbol is not a constructor");return new e(a+(n||"")+"_"+r++,n)}})),s("Symbol.iterator",(function(t){if(t)return t;t=Symbol("Symbol.iterator");for(var a="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),s=0;s<a.length;s++){var i=r[a[s]];"function"==typeof i&&"function"!=typeof i.prototype[t]&&n(i.prototype,t,{configurable:!0,writable:!0,value:function(){return o(e(this))}})}return t}));var u,m="function"==typeof Object.create?Object.create:function(t){function e(){}return e.prototype=t,new e};if("function"==typeof Object.setPrototypeOf)u=Object.setPrototypeOf;else{var c;t:{var l={};try{l.__proto__={a:!0},c=l.a;break t}catch(t){}c=!1}u=c?function(t,e){if(t.__proto__=e,t.__proto__!==e)throw new TypeError(t+" is not extensible");return t}:null}var d=u;function h(t,e){if(t.prototype=m(e.prototype),t.prototype.constructor=t,d)d(t,e);else for(var n in e)if("prototype"!=n)if(Object.defineProperties){var a=Object.getOwnPropertyDescriptor(e,n);a&&Object.defineProperty(t,n,a)}else t[n]=e[n];t.da=e.prototype}function f(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.s=this.m=0,this.j=null}function y(t){if(t.l)throw new TypeError("Generator is already running");t.l=!0}function g(t,e){t.j={U:e,V:!0},t.g=t.m||t.s}function b(t,e,n){return t.g=n,{value:e}}function N(t){this.g=new f,this.h=t}function x(t,e,n,a){try{var r=e.call(t.g.i,n);if(!(r instanceof Object))throw new TypeError("Iterator result "+r+" is not an object");if(!r.done)return t.g.l=!1,r;var s=r.value}catch(e){return t.g.i=null,g(t.g,e),T(t)}return t.g.i=null,a.call(t.g,s),T(t)}function T(t){for(;t.g.g;)try{var e=t.h(t.g);if(e)return t.g.l=!1,{value:e.value,done:!1}}catch(e){t.g.h=void 0,g(t.g,e)}if(t.g.l=!1,t.g.j){if(e=t.g.j,t.g.j=null,e.V)throw e.U;return{value:e.return,done:!0}}return{value:void 0,done:!0}}function v(t){this.next=function(e){return y(t.g),t.g.i?e=x(t,t.g.i.next,e,t.g.o):(t.g.o(e),e=T(t)),e},this.throw=function(e){return y(t.g),t.g.i?e=x(t,t.g.i.throw,e,t.g.o):(g(t.g,e),e=T(t)),e},this.return=function(e){return function(t,e){y(t.g);var n=t.g.i;return n?x(t,"return"in n?n.return:function(t){return{value:t,done:!0}},e,t.g.return):(t.g.return(e),T(t))}(t,e)},this[Symbol.iterator]=function(){return this}}function w(t){return function(t){function e(e){return t.next(e)}function n(e){return t.throw(e)}return new Promise((function(a,r){!function t(s){s.done?a(s.value):Promise.resolve(s.value).then(e,n).then(t,r)}(t.next())}))}(new v(new N(t)))}f.prototype.o=function(t){this.h=t},f.prototype.return=function(t){this.j={return:t},this.g=this.s},s("Promise",(function(t){function e(t){this.h=0,this.i=void 0,this.g=[],this.o=!1;var e=this.j();try{t(e.resolve,e.reject)}catch(t){e.reject(t)}}function n(){this.g=null}function a(t){return t instanceof e?t:new e((function(e){e(t)}))}if(t)return t;n.prototype.h=function(t){if(null==this.g){this.g=[];var e=this;this.i((function(){e.l()}))}this.g.push(t)};var s=r.setTimeout;n.prototype.i=function(t){s(t,0)},n.prototype.l=function(){for(;this.g&&this.g.length;){var t=this.g;this.g=[];for(var e=0;e<t.length;++e){var n=t[e];t[e]=null;try{n()}catch(t){this.j(t)}}}this.g=null},n.prototype.j=function(t){this.i((function(){throw t}))},e.prototype.j=function(){function t(t){return function(a){n||(n=!0,t.call(e,a))}}var e=this,n=!1;return{resolve:t(this.C),reject:t(this.l)}},e.prototype.C=function(t){if(t===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(t instanceof e)this.F(t);else{t:switch(typeof t){case"object":var n=null!=t;break t;case"function":n=!0;break t;default:n=!1}n?this.v(t):this.m(t)}},e.prototype.v=function(t){var e=void 0;try{e=t.then}catch(t){return void this.l(t)}"function"==typeof e?this.G(e,t):this.m(t)},e.prototype.l=function(t){this.s(2,t)},e.prototype.m=function(t){this.s(1,t)},e.prototype.s=function(t,e){if(0!=this.h)throw Error("Cannot settle("+t+", "+e+"): Promise already settled in state"+this.h);this.h=t,this.i=e,2===this.h&&this.D(),this.A()},e.prototype.D=function(){var t=this;s((function(){if(t.B()){var e=r.console;void 0!==e&&e.error(t.i)}}),1)},e.prototype.B=function(){if(this.o)return!1;var t=r.CustomEvent,e=r.Event,n=r.dispatchEvent;return void 0===n||("function"==typeof t?t=new t("unhandledrejection",{cancelable:!0}):"function"==typeof e?t=new e("unhandledrejection",{cancelable:!0}):(t=r.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,t),t.promise=this,t.reason=this.i,n(t))},e.prototype.A=function(){if(null!=this.g){for(var t=0;t<this.g.length;++t)o.h(this.g[t]);this.g=null}};var o=new n;return e.prototype.F=function(t){var e=this.j();t.J(e.resolve,e.reject)},e.prototype.G=function(t,e){var n=this.j();try{t.call(e,n.resolve,n.reject)}catch(t){n.reject(t)}},e.prototype.then=function(t,n){function a(t,e){return"function"==typeof t?function(e){try{r(t(e))}catch(t){s(t)}}:e}var r,s,o=new e((function(t,e){r=t,s=e}));return this.J(a(t,r),a(n,s)),o},e.prototype.catch=function(t){return this.then(void 0,t)},e.prototype.J=function(t,e){function n(){switch(a.h){case 1:t(a.i);break;case 2:e(a.i);break;default:throw Error("Unexpected state: "+a.h)}}var a=this;null==this.g?o.h(n):this.g.push(n),this.o=!0},e.resolve=a,e.reject=function(t){return new e((function(e,n){n(t)}))},e.race=function(t){return new e((function(e,n){for(var r=i(t),s=r.next();!s.done;s=r.next())a(s.value).J(e,n)}))},e.all=function(t){var n=i(t),r=n.next();return r.done?a([]):new e((function(t,e){function s(e){return function(n){o[e]=n,0==--i&&t(o)}}var o=[],i=0;do{o.push(void 0),i++,a(r.value).J(s(o.length-1),e),r=n.next()}while(!r.done)}))},e}));var _="function"==typeof Object.assign?Object.assign:function(t,e){for(var n=1;n<arguments.length;n++){var a=arguments[n];if(a)for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t};s("Object.assign",(function(t){return t||_})),s("Object.is",(function(t){return t||function(t,e){return t===e?0!==t||1/t==1/e:t!=t&&e!=e}})),s("Array.prototype.includes",(function(t){return t||function(t,e){var n=this;n instanceof String&&(n=String(n));var a=n.length;for(0>(e=e||0)&&(e=Math.max(e+a,0));e<a;e++){var r=n[e];if(r===t||Object.is(r,t))return!0}return!1}})),s("String.prototype.includes",(function(t){return t||function(t,e){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(t instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(t,e||0)}})),s("Array.prototype.keys",(function(t){return t||function(){return function(t,e){t instanceof String&&(t+="");var n=0,a=!1,r={next:function(){if(!a&&n<t.length){var r=n++;return{value:e(r,t[r]),done:!1}}return a=!0,{done:!0,value:void 0}}};return r[Symbol.iterator]=function(){return r},r}(this,(function(t){return t}))}}));var S=this||self;function O(t,e){t=t.split(".");var n,a=S;t[0]in a||void 0===a.execScript||a.execScript("var "+t[0]);for(;t.length&&(n=t.shift());)t.length||void 0===e?a=a[n]&&a[n]!==Object.prototype[n]?a[n]:a[n]={}:a[n]=e}function A(t){!function(t){S.setTimeout((function(){throw t}),0)}(t)}function M(t,e){A(Error("Invalid wire type: "+t+" (at position "+e+")"))}function E(){A(Error("Failed to read varint, encoding is invalid."))}function I(t,e){return e=String.fromCharCode.apply(null,e),null==t?e:t+e}var k,D,C="undefined"!=typeof TextDecoder,F="undefined"!=typeof TextEncoder;function V(t){if(F)t=(D||(D=new TextEncoder)).encode(t);else{var e=void 0;e=void 0!==e&&e;for(var n=0,a=new Uint8Array(3*t.length),r=0;r<t.length;r++){var s=t.charCodeAt(r);if(128>s)a[n++]=s;else{if(2048>s)a[n++]=s>>6|192;else{if(55296<=s&&57343>=s){if(56319>=s&&r<t.length){var o=t.charCodeAt(++r);if(56320<=o&&57343>=o){s=1024*(s-55296)+o-56320+65536,a[n++]=s>>18|240,a[n++]=s>>12&63|128,a[n++]=s>>6&63|128,a[n++]=63&s|128;continue}r--}if(e)throw Error("Found an unpaired surrogate");s=65533}a[n++]=s>>12|224,a[n++]=s>>6&63|128}a[n++]=63&s|128}}t=a.subarray(0,n)}return t}var L={},R=null;function z(t){var e;void 0===e&&(e=0),P(),e=L[e];for(var n=Array(Math.floor(t.length/3)),a=e[64]||"",r=0,s=0;r<t.length-2;r+=3){var o=t[r],i=t[r+1],p=t[r+2],u=e[o>>2];o=e[(3&o)<<4|i>>4],i=e[(15&i)<<2|p>>6],p=e[63&p],n[s++]=u+o+i+p}switch(u=0,p=a,t.length-r){case 2:p=e[(15&(u=t[r+1]))<<2]||a;case 1:t=t[r],n[s]=e[t>>2]+e[(3&t)<<4|u>>4]+p+a}return n.join("")}function j(t){var e=t.length,n=3*e/4;n%3?n=Math.floor(n):-1!="=.".indexOf(t[e-1])&&(n=-1!="=.".indexOf(t[e-2])?n-2:n-1);var a=new Uint8Array(n),r=0;return function(t,e){function n(e){for(;a<t.length;){var n=t.charAt(a++),r=R[n];if(null!=r)return r;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return e}P();for(var a=0;;){var r=n(-1),s=n(0),o=n(64),i=n(64);if(64===i&&-1===r)break;e(r<<2|s>>4),64!=o&&(e(s<<4&240|o>>2),64!=i&&e(o<<6&192|i))}}(t,(function(t){a[r++]=t})),a.subarray(0,r)}function P(){if(!R){R={};for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),e=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var a=t.concat(e[n].split(""));L[n]=a;for(var r=0;r<a.length;r++){var s=a[r];void 0===R[s]&&(R[s]=r)}}}}var B,$="function"==typeof Uint8Array;function U(t){if(this.g=t,null!==t&&0===t.length)throw Error("ByteString should be constructed with non-empty values")}U.prototype.toJSON=function(){if(null==this.g)var t="";else t=this.g,t=this.g=null==t||"string"==typeof t?t:$&&t instanceof Uint8Array?z(t):null;return t};var H="function"==typeof Uint8Array.prototype.slice;function W(t,e,n){return e===n?B||(B=new Uint8Array(0)):H?t.slice(e,n):new Uint8Array(t.subarray(e,n))}var G=0;function X(t,e){e=void 0!==(e=void 0===e?{}:e).u&&e.u,this.h=null,this.g=this.i=this.l=0,this.j=!1,this.u=e,t&&Y(this,t)}function Y(t,e){t.h=function(t){if(t.constructor===Uint8Array)return t;if(t.constructor===ArrayBuffer)return new Uint8Array(t);if(t.constructor===Array)return new Uint8Array(t);if(t.constructor===String)return j(t);if(t.constructor===U){if(null==t.g)var e=B||(B=new Uint8Array(0));else{e=Uint8Array;var n=t.g;n=null==n||$&&null!=n&&n instanceof Uint8Array?n:"string"==typeof n?j(n):null,e=new e(t=t.g=n)}return e}if(t instanceof Uint8Array)return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers")}(e),t.l=0,t.i=t.h.length,t.g=t.l}function q(t){t.g>t.i&&(t.j=!0,A(Error("Tried to read past the end of the data "+t.g+" > "+t.i)))}function K(t){var e=t.h,n=e[t.g],a=127&n;return 128>n?(t.g+=1,q(t),a):(a|=(127&(n=e[t.g+1]))<<7,128>n?(t.g+=2,q(t),a):(a|=(127&(n=e[t.g+2]))<<14,128>n?(t.g+=3,q(t),a):(a|=(127&(n=e[t.g+3]))<<21,128>n?(t.g+=4,q(t),a):(a|=(15&(n=e[t.g+4]))<<28,128>n?(t.g+=5,q(t),a>>>0):(t.g+=5,128<=e[t.g++]&&128<=e[t.g++]&&128<=e[t.g++]&&128<=e[t.g++]&&128<=e[t.g++]?(t.j=!0,E(),a):(q(t),a))))))}X.prototype.reset=function(){this.g=this.l};var Q=[];function Z(){this.g=new Uint8Array(64),this.h=0}function J(t,e){if(!(t.h+1<t.g.length)){var n=t.g;t.g=new Uint8Array(Math.ceil(1+2*t.g.length)),t.g.set(n)}t.g[t.h++]=e}function tt(t,e){for(;127<e;)J(t,127&e|128),e>>>=7;J(t,e)}function et(t){var e={},n=void 0!==e.N&&e.N;this.m={u:void 0!==e.u&&e.u},this.N=n,e=this.m,Q.length?(n=Q.pop(),e&&(n.u=e.u),t&&Y(n,t),t=n):t=new X(t,e),this.g=t,this.l=this.g.g,this.h=this.i=-1,this.j=!1}function nt(t){var e=t.g;if((e=e.g==e.i)||(e=t.j)||(e=(e=t.g).j||0>e.g||e.g>e.i),e)return!1;t.l=t.g.g;var n=K(t.g);return e=n>>>3,0<=(n&=7)&&5>=n?(t.i=e,t.h=n,!0):(t.j=!0,M(n,t.l),!1)}function at(t){switch(t.h){case 0:if(0!=t.h)at(t);else t:{for(var e=(t=t.g).g,n=0;10>n;n++){if(0==(128&t.h[e])){t.g=e+1,q(t);break t}e++}t.j=!0,E()}break;case 1:(t=t.g).g+=8,q(t);break;case 2:2!=t.h?at(t):(e=K(t.g),(t=t.g).g+=e,q(t));break;case 5:(t=t.g).g+=4,q(t);break;case 3:for(e=t.i;;){if(!nt(t)){t.j=!0,A(Error("Unmatched start-group tag: stream EOF"));break}if(4==t.h){t.i!=e&&(t.j=!0,A(Error("Unmatched end-group tag")));break}at(t)}break;default:t.j=!0,M(t.h,t.l)}}function rt(t,e,n){t.N||(t=W(t.g.h,n,t.g.g),(n=e.m)?n.push(t):e.m=[t])}Z.prototype.length=function(){return this.h},Z.prototype.end=function(){var t=this.g,e=this.h;return this.h=0,W(t,0,e)},et.prototype.reset=function(){this.g.reset(),this.h=this.i=-1};var st=[];function ot(){this.h=[],this.i=0,this.g=new Z}function it(t,e){0!==e.length&&(t.h.push(e),t.i+=e.length)}function pt(t,e,n){tt(t.g,8*e+2),tt(t.g,n.length),it(t,t.g.end()),it(t,n)}var ut,mt="function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol(void 0):void 0;function ct(t,e){Object.isFrozen(t)||(mt?t[mt]|=e:void 0!==t.g?t.g|=e:Object.defineProperties(t,{g:{value:e,configurable:!0,writable:!0,enumerable:!1}}))}function lt(t){return t?null==(e=mt?t[mt]:t.g)?0:e:0;var e}function dt(t){return Array.isArray(t)?(ct(t,1),t):t}function ht(t){if(!Array.isArray(t))throw Error("cannot mark non-array as immutable");ct(t,2)}function ft(t){return null!==t&&"object"==typeof t&&t.constructor===Object}function yt(t){switch(typeof t){case"number":return isFinite(t)?t:String(t);case"object":return $&&null!=t&&t instanceof Uint8Array?z(t):t;default:return t}}function gt(t,e){if(null!=t)return Array.isArray(t)||ft(t)?bt(t,e):e(t)}function bt(t,e){if(Array.isArray(t)){for(var n=Array(t.length),a=0;a<t.length;a++)n[a]=gt(t[a],e);return 1&lt(t)&&dt(n),n}for(a in n={},t)n[a]=gt(t[a],e);return n}function Nt(t,e,n){var a=ut;if(ut=null,t||(t=a),a=this.constructor.ba,t||(t=a?[a]:[]),this.j=(a?0:-1)-(this.constructor.$||0),this.i=null,this.g=t,t=(a=this.g.length)-1,a&&ft(a=this.g[t])?(this.l=t-this.j,this.h=a):void 0!==e&&-1<e?(this.l=Math.max(e,t+1-this.j),this.h=null):this.l=Number.MAX_VALUE,n)for(e=0;e<n.length;e++)(t=n[e])<this.l?(t+=this.j,(a=this.g[t])?dt(a):this.g[t]=vt):(wt(this),(a=this.h[t])?dt(a):this.h[t]=vt)}var xt,Tt,vt=Object.freeze(dt([]));function wt(t){var e=t.l+t.j;t.g[e]||(t.h=t.g[e]={})}function _t(t,e,n){return-1===e?null:void 0!==n&&n||e>=t.l?t.h?t.h[e]:void 0:t.g[e+t.j]}function St(t,e,n){n=void 0===n||n;var a=void 0!==a&&a,r=_t(t,e,a);return null==r&&(r=vt),r===vt?At(t,e,r=dt([]),a):n&&Array.isArray(r)&&2&lt(r)&&At(t,e,r=r.slice(),a),r}function Ot(t,e,n){return null==(t=null==(t=_t(t,e))?t:+t)?void 0===n?0:n:t}function At(t,e,n,a){void 0!==a&&a||e>=t.l?(wt(t),t.h[e]=n):t.g[e+t.j]=n}function Mt(t,e,n){t.i||(t.i={});var a=t.i[n];if(!a){var r=St(t,n,!1);a=[];for(var s=!!Array.isArray(r)&&!!(2&lt(r)),o=0;o<r.length;o++)a[o]=new e(r[o]),s&&ht(a[o].g);s&&(ht(a),Object.freeze(a)),t.i[n]=a}return a}function Et(t,e,n,a,r){var s=Mt(t,a,e);n=n||new a,t=St(t,e),null!=r?(s.splice(r,0,n),t.splice(r,0,It(n))):(s.push(n),t.push(It(n)))}function It(t){if(t.i)for(var e in t.i){var n=t.i[e];if(Array.isArray(n))for(var a=0;a<n.length;a++)n[a]&&It(n[a]);else n&&It(n)}return t.g}function kt(t,e){return null==(t=_t(t,e))?0:t}function Dt(t,e){return null==(t=_t(t,e))?"":t}function Ct(t,e){if(t=t.m){it(e,e.g.end());for(var n=0;n<t.length;n++)it(e,t[n])}}function Ft(t){var e=t[0];switch(t.length){case 2:var n=t[1];return function(t,a,r){return e(t,a,r,n)};case 3:var a=t[1],r=t[2];return function(t,n,s){return e(t,n,s,a,r)};case 4:var s=t[1],o=t[2],i=t[3];return function(t,n,a){return e(t,n,a,s,o,i)};default:throw Error("unsupported number of parameters, expected [2-4], got "+t.length)}}function Vt(t,e,n){for(;nt(e)&&4!=e.h;){var a=e.i,r=n[a];if(r){if(Array.isArray(r)&&(r=n[a]=Ft(r)),!r(e,t,a)){r=t;var s=(a=e).l;at(a),rt(a,r,s)}}else r=t,s=(a=e).l,at(a),rt(a,r,s)}return t}function Lt(t,e){var n=new ot;if(e(t,n),0===(t=n.i+n.g.length()))n=new Uint8Array(0);else{t=new Uint8Array(t);for(var a=n.h,r=a.length,s=e=0;s<r;s++){var o=a[s];0!==o.length&&(t.set(o,e),e+=o.length)}0!==(r=(a=n.g).h)&&(t.set(a.g.subarray(0,r),e),a.h=0),n.h=[t],n=t}return n}function Rt(t,e,n){if(st.length){var a=st.pop();t&&(Y(a.g,t),a.i=-1,a.h=-1),t=a}else t=new et(t);try{return n(new e,t)}finally{(e=t.g).h=null,e.l=0,e.i=0,e.g=0,e.j=!1,e.u=!1,t.i=-1,t.h=-1,t.j=!1,100>st.length&&st.push(t)}}function zt(t,e,n){if(null!=(e=_t(e,n))){tt(t.g,8*n+5),t=t.g;var a=e;0===(a=(n=0>a?1:0)?-a:a)?G=0<1/a?0:2147483648:isNaN(a)?G=2147483647:34028234663852886e22<a?G=(n<<31|2139095040)>>>0:11754943508222875e-54>a?(a=Math.round(a/Math.pow(2,-149)),G=(n<<31|a)>>>0):(e=Math.floor(Math.log(a)/Math.LN2),a*=Math.pow(2,-e),16777216<=(a=Math.round(8388608*a))&&++e,G=(n<<31|e+127<<23|8388607&a)>>>0),J(t,(n=G)>>>0&255),J(t,n>>>8&255),J(t,n>>>16&255),J(t,n>>>24&255)}}function jt(t,e,n){if(5!==t.h)return!1;var a=(t=t.g).h[t.g],r=t.h[t.g+1],s=t.h[t.g+2],o=t.h[t.g+3];return t.g+=4,q(t),t=2*((r=(a<<0|r<<8|s<<16|o<<24)>>>0)>>31)+1,a=r>>>23&255,r&=8388607,At(e,n,255==a?r?NaN:1/0*t:0==a?t*Math.pow(2,-149)*r:t*Math.pow(2,a-150)*(r+Math.pow(2,23))),!0}function Pt(t,e,n){if(0!==t.h)return!1;for(var a=t.g,r=128,s=0,o=t=0;4>o&&128<=r;o++)s|=(127&(r=a.h[a.g++]))<<7*o;if(128<=r&&(s|=(127&(r=a.h[a.g++]))<<28,t|=(127&r)>>4),128<=r)for(o=0;5>o&&128<=r;o++)t|=(127&(r=a.h[a.g++]))<<7*o+3;return 128>r?(a=s>>>0,(t=2147483648&(r=t>>>0))&&(r=~r>>>0,0==(a=1+~a>>>0)&&(r=r+1>>>0)),a=4294967296*r+(a>>>0),t=t?-a:a):(a.j=!0,E(),t=void 0),At(e,n,t),!0}function Bt(t,e,n){return 0===t.h&&(At(e,n,K(t.g)),!0)}function $t(t,e,n){if(2!==t.h)return!1;var a,r=K(t.g),s=(t=t.g).g;if(t.g+=r,q(t),t=t.h,C)(a=k)||(a=k=new TextDecoder("utf-8",{fatal:!1})),a=a.decode(t.subarray(s,s+r));else{r=s+r;for(var o,i,p,u=[],m=null;s<r;)128>(o=t[s++])?u.push(o):224>o?s>=r?u.push(65533):(i=t[s++],194>o||128!=(192&i)?(s--,u.push(65533)):u.push((31&o)<<6|63&i)):240>o?s>=r-1?u.push(65533):128!=(192&(i=t[s++]))||224===o&&160>i||237===o&&160<=i||128!=(192&(a=t[s++]))?(s--,u.push(65533)):u.push((15&o)<<12|(63&i)<<6|63&a):244>=o?s>=r-2?u.push(65533):128!=(192&(i=t[s++]))||0!=i-144+(o<<28)>>30||128!=(192&(a=t[s++]))||128!=(192&(p=t[s++]))?(s--,u.push(65533)):(o=(7&o)<<18|(63&i)<<12|(63&a)<<6|63&p,o-=65536,u.push(55296+(o>>10&1023),56320+(1023&o))):u.push(65533),8192<=u.length&&(m=I(m,u),u.length=0);a=I(m,u)}return At(e,n,a),!0}function Ut(t,e,n,a,r){if(2!==t.h)return!1;var s=new a,o=t.g.i,i=K(t.g),p=t.g.g+i;if(t.g.i=p,r(s,t),0!=(r=p-t.g.g))throw Error("Message parsing ended unexpectedly. Expected to read "+i+" bytes, instead read "+(i-r)+" bytes, either the data ended unexpectedly or the message misreported its own length");return t.g.g=p,t.g.i=o,Et(e,n,s,a,void 0),!0}function Ht(t){Nt.call(this,t)}function Wt(t,e){var n=_t(t,1);if(null!=n&&null!=n){tt(e.g,8);var a=e.g;if(0<=n)tt(a,n);else{for(var r=0;9>r;r++)J(a,127&n|128),n>>=7;J(a,1)}}zt(e,t,2),null!=(a=_t(t,3))&&pt(e,3,V(a)),null!=(a=_t(t,4))&&pt(e,4,V(a)),Ct(t,e)}function Gt(t,e){return Vt(t,e,xt||(xt={1:Bt,2:jt,3:$t,4:$t}))}function Xt(t){Nt.call(this,t,-1,Qt)}function Yt(t,e){return Vt(t,e,Tt||(Tt={1:[Ut,Ht,Gt]}))}Nt.prototype.toJSON=function(){return bt(It(this),yt)},Nt.prototype.toString=function(){return It(this).toString()},h(Ht,Nt),h(Xt,Nt),Xt.prototype.addClassification=function(t,e){return Et(this,1,t,Ht,e),this};var qt,Kt,Qt=[1];function Zt(t){Nt.call(this,t)}function Jt(t,e){zt(e,t,1),zt(e,t,2),zt(e,t,3),zt(e,t,4),zt(e,t,5),Ct(t,e)}function te(t,e){return Vt(t,e,qt||(qt={1:jt,2:jt,3:jt,4:jt,5:jt}))}function ee(t){Nt.call(this,t,-1,re)}function ne(t,e){return Vt(t,e,Kt||(Kt={1:[Ut,Zt,te]}))}h(Zt,Nt),h(ee,Nt);var ae,re=[1];function se(t){Nt.call(this,t)}function oe(t,e){zt(e,t,1),zt(e,t,2),zt(e,t,3),zt(e,t,4),zt(e,t,5);var n=_t(t,6);if(null!=n&&null!=n){tt(e.g,48);var a=e.g,r=n;n=0>r;var s=(r=Math.abs(r))>>>0;for(r=Math.floor((r-s)/4294967296),r>>>=0,n&&(r=~r>>>0,4294967295<(s=1+(~s>>>0))&&(s=0,4294967295<++r&&(r=0))),n=G=s,s=r;0<s||127<n;)J(a,127&n|128),n=(n>>>7|s<<25)>>>0,s>>>=7;J(a,n)}Ct(t,e)}function ie(t,e){return Vt(t,e,ae||(ae={1:jt,2:jt,3:jt,4:jt,5:jt,6:Pt}))}function pe(t,e,n){if(n=t.createShader(0===n?t.VERTEX_SHADER:t.FRAGMENT_SHADER),t.shaderSource(n,e),t.compileShader(n),!t.getShaderParameter(n,t.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+t.getShaderInfoLog(n));return n}function ue(t){return Mt(t,Ht,1).map((function(t){return{index:kt(t,1),score:Ot(t,2),label:null!=_t(t,3)?Dt(t,3):void 0,displayName:null!=_t(t,4)?Dt(t,4):void 0}}))}function me(t){return{x:Ot(t,1),y:Ot(t,2),z:Ot(t,3),visibility:null!=_t(t,4)?Ot(t,4):void 0}}function ce(t){return t.map((function(t){return Mt(Rt(t,ee,ne),Zt,1).map(me)}))}function le(t,e){this.h=t,this.g=e,this.l=0}function de(t,e,n){return function(t,e){var n=t.g;if(void 0===t.m){var a=pe(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),r=pe(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),s=n.createProgram();if(n.attachShader(s,a),n.attachShader(s,r),n.linkProgram(s),!n.getProgramParameter(s,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(s));a=t.m=s,n.useProgram(a),r=n.getUniformLocation(a,"sampler0"),t.j={I:n.getAttribLocation(a,"aVertex"),H:n.getAttribLocation(a,"aTex"),ca:r},t.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,t.s),n.enableVertexAttribArray(t.j.I),n.vertexAttribPointer(t.j.I,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),t.o=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,t.o),n.enableVertexAttribArray(t.j.H),n.vertexAttribPointer(t.j.H,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(r,0)}a=t.j,n.useProgram(t.m),n.canvas.width=e.width,n.canvas.height=e.height,n.viewport(0,0,e.width,e.height),n.activeTexture(n.TEXTURE0),t.h.bindTexture2d(e.glName),n.enableVertexAttribArray(a.I),n.bindBuffer(n.ARRAY_BUFFER,t.s),n.vertexAttribPointer(a.I,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(a.H),n.bindBuffer(n.ARRAY_BUFFER,t.o),n.vertexAttribPointer(a.H,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(a.I),n.disableVertexAttribArray(a.H),n.bindBuffer(n.ARRAY_BUFFER,null),t.h.bindTexture2d(0)}(t,e),"function"==typeof t.g.canvas.transferToImageBitmap?Promise.resolve(t.g.canvas.transferToImageBitmap()):n?Promise.resolve(t.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(t.g.canvas):(void 0===t.i&&(t.i=document.createElement("canvas")),new Promise((function(e){t.i.height=t.g.canvas.height,t.i.width=t.g.canvas.width,t.i.getContext("2d",{}).drawImage(t.g.canvas,0,0,t.g.canvas.width,t.g.canvas.height),e(t.i)})))}function he(t){this.g=t}h(se,Nt);var fe=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function ye(t,e){return e+t}function ge(t,e){window[t]=e}function be(t){if(this.g=t,this.listeners={},this.j={},this.F={},this.m={},this.s={},this.G=this.o=this.R=!0,this.C=Promise.resolve(),this.P="",this.B={},this.locateFile=t&&t.locateFile||ye,"object"==typeof window)var e=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");e=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.S=e,t.options)for(var n=(e=i(Object.keys(t.options))).next();!n.done;n=e.next()){n=n.value;var a=t.options[n].default;void 0!==a&&(this.j[n]="function"==typeof a?a():a)}}function Ne(t,e){var n,a;return w((function(r){return e in t.F?r.return(t.F[e]):(n=t.locateFile(e,""),a=fetch(n).then((function(t){return t.arrayBuffer()})),t.F[e]=a,r.return(a))}))}function xe(t,e){for(var n=e.name||"$",a=[].concat(p(e.wants)),r=new t.h.StringList,s=i(e.wants),o=s.next();!o.done;o=s.next())r.push_back(o.value);s=t.h.PacketListener.implement({onResults:function(r){for(var s={},o=0;o<e.wants.length;++o)s[a[o]]=r.get(o);var p=t.listeners[n];p&&(t.C=function(t,e,n){var a,r,s,o,p,u,m,c,l,d,h,f,y,g;return w((function(N){switch(N.g){case 1:if(!n)return N.return(e);for(a={},r=0,s=i(Object.keys(n)),o=s.next();!o.done;o=s.next())p=o.value,"string"!=typeof(u=n[p])&&"texture"===u.type&&void 0!==e[u.stream]&&++r;1<r&&(t.G=!1),m=i(Object.keys(n)),o=m.next();case 2:if(o.done){N.g=4;break}if(c=o.value,"string"==typeof(l=n[c]))return y=a,g=c,b(N,function(t,e,n){var a;return w((function(r){return"number"==typeof n||n instanceof Uint8Array||n instanceof t.h.Uint8BlobList?r.return(n):n instanceof t.h.Texture2dDataOut?((a=t.s[e])||(a=new le(t.h,t.D),t.s[e]=a),r.return(de(a,n,t.G))):r.return(void 0)}))}(t,c,e[l]),14);if(d=e[l.stream],"detection_list"===l.type){if(d){for(var x=d.getRectList(),T=d.getLandmarksList(),v=d.getClassificationsList(),_=[],S=0;S<x.size();++S){var O=Rt(x.get(S),se,ie);O={T:{X:Ot(O,1),Y:Ot(O,2),height:Ot(O,3),width:Ot(O,4),rotation:Ot(O,5,0),W:kt(O,6)},O:Mt(Rt(T.get(S),ee,ne),Zt,1).map(me),M:ue(Rt(v.get(S),Xt,Yt))},_.push(O)}x=_}else x=[];a[c]=x,N.g=7;break}if("proto_list"===l.type){if(d){for(x=Array(d.size()),T=0;T<d.size();T++)x[T]=d.get(T);d.delete()}else x=[];a[c]=x,N.g=7;break}if(void 0===d){N.g=3;break}if("float_list"===l.type){a[c]=d,N.g=7;break}if("proto"===l.type){a[c]=d,N.g=7;break}if("texture"!==l.type)throw Error("Unknown output config type: '"+l.type+"'");return(h=t.s[c])||(h=new le(t.h,t.D),t.s[c]=h),b(N,de(h,d,t.G),13);case 13:f=N.h,a[c]=f;case 7:l.transform&&a[c]&&(a[c]=l.transform(a[c])),N.g=3;break;case 14:y[g]=N.h;case 3:o=m.next(),N.g=2;break;case 4:return N.return(a)}}))}(t,s,e.outs).then((function(n){n=p(n);for(var r=0;r<e.wants.length;++r){var o=s[a[r]];"object"==typeof o&&o.hasOwnProperty&&o.hasOwnProperty("delete")&&o.delete()}n&&(t.C=n)})))}}),t.i.attachMultiListener(r,s),r.delete()}function Te(t){return void 0===t&&(t=0),1===t?"hand_landmark_full.tflite":"hand_landmark_lite.tflite"}function ve(t){var e=this;t=t||{},this.g=new be({locateFile:t.locateFile,files:function(t){return[{url:"hands_solution_packed_assets_loader.js"},{simd:!1,url:"hands_solution_wasm_bin.js"},{simd:!0,url:"hands_solution_simd_wasm_bin.js"},{data:!0,url:Te(t.modelComplexity)}]},graph:{url:"hands.binarypb"},inputs:{image:{type:"video",stream:"input_frames_gpu"}},listeners:[{wants:["multi_hand_landmarks","multi_hand_world_landmarks","image_transformed","multi_handedness"],outs:{image:"image_transformed",multiHandLandmarks:{type:"proto_list",stream:"multi_hand_landmarks",transform:ce},multiHandWorldLandmarks:{type:"proto_list",stream:"multi_hand_world_landmarks",transform:ce},multiHandedness:{type:"proto_list",stream:"multi_handedness",transform:function(t){return t.map((function(t){return ue(Rt(t,Xt,Yt))[0]}))}}}}],options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},maxNumHands:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculator",fieldName:"int_value"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(t){var n,a,r;return w((function(s){return 1==s.g?(n=Te(t),a="third_party/mediapipe/modules/hand_landmark/"+n,b(s,Ne(e.g,n),2)):(r=s.h,e.g.overrideFile(a,r),s.return(!0))}))}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"handlandmarktrackinggpu__palmdetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"handlandmarktrackinggpu__handlandmarkgpu__ThresholdingCalculator",fieldName:"threshold"}}}})}(t=be.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},t.reset=function(){var t=this;return w((function(e){t.i&&(t.i.reset(),t.m={},t.s={}),e.g=0}))},t.setOptions=function(t,e){var n=this;if(e=e||this.g.options){for(var a=[],r=[],s={},o=i(Object.keys(t)),p=o.next();!p.done;s={K:s.K,L:s.L},p=o.next()){var u=p.value;u in this.j&&this.j[u]===t[u]||(this.j[u]=t[u],void 0!==(p=e[u])&&(p.onChange&&(s.K=p.onChange,s.L=t[u],a.push(function(t){return function(){return w((function(e){if(1==e.g)return b(e,t.K(t.L),2);!0===e.h&&(n.o=!0),e.g=0}))}}(s))),p.graphOptionXref&&(u={valueNumber:1===p.type?t[u]:0,valueBoolean:0===p.type&&t[u],valueString:2===p.type?t[u]:""},p=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),p.graphOptionXref),u),r.push(p))))}0===a.length&&0===r.length||(this.o=!0,this.A=(void 0===this.A?[]:this.A).concat(r),this.v=(void 0===this.v?[]:this.v).concat(a))}},t.initialize=function(){var t=this;return w((function(e){return 1==e.g?b(e,function(t){var e,n,a,r,s,o,i,u,m,c,l;return w((function(d){switch(d.g){case 1:return t.R?(e=void 0===t.g.files?[]:"function"==typeof t.g.files?t.g.files(t.j):t.g.files,b(d,w((function(t){switch(t.g){case 1:return t.m=2,b(t,WebAssembly.instantiate(fe),4);case 4:t.g=3,t.m=0;break;case 2:return t.m=0,t.j=null,t.return(!1);case 3:return t.return(!0)}})),2)):d.return();case 2:if(n=d.h,"object"==typeof window)return ge("createMediapipeSolutionsWasm",{locateFile:t.locateFile}),ge("createMediapipeSolutionsPackedAssets",{locateFile:t.locateFile}),o=e.filter((function(t){return void 0!==t.data})),i=e.filter((function(t){return void 0===t.data})),u=Promise.all(o.map((function(e){var n=Ne(t,e.url);if(void 0!==e.path){var a=e.path;n=n.then((function(e){return t.overrideFile(a,e),Promise.resolve(e)}))}return n}))),m=Promise.all(i.map((function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n?function(t){var e=document.createElement("script");return e.setAttribute("src",t),e.setAttribute("crossorigin","anonymous"),new Promise((function(t){e.addEventListener("load",(function(){t()}),!1),e.addEventListener("error",(function(){t()}),!1),document.body.appendChild(e)}))}(t.locateFile(e.url,t.S)):Promise.resolve()}))).then((function(){var e,n,a;return w((function(r){if(1==r.g)return e=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,a=t,b(r,e(n),2);a.h=r.h,r.g=0}))})),c=w((function(e){return t.g.graph&&t.g.graph.url?e=b(e,Ne(t,t.g.graph.url),0):(e.g=0,e=void 0),e})),b(d,Promise.all([m,u,c]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=e.filter((function(t){return void 0===t.simd||t.simd&&n||!t.simd&&!n})).map((function(e){return t.locateFile(e.url,t.S)})),importScripts.apply(null,p(a)),r=t,b(d,createMediapipeSolutionsWasm(Module),6);case 6:r.h=d.h,t.l=new OffscreenCanvas(1,1),t.h.canvas=t.l,s=t.h.GL.createContext(t.l,{antialias:!1,alpha:!1,aa:"undefined"!=typeof WebGL2RenderingContext?2:1}),t.h.GL.makeContextCurrent(s),d.g=4;break;case 7:if(t.l=document.createElement("canvas"),!(l=t.l.getContext("webgl2",{}))&&!(l=t.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),d.return();t.D=l,t.h.canvas=t.l,t.h.createContext(t.l,!0,!0,{});case 4:t.i=new t.h.SolutionWasm,t.R=!1,d.g=0}}))}(t),2):3!=e.g?b(e,function(t){var e,n,a,r,s,o,p,u;return w((function(m){if(1==m.g)return t.g.graph&&t.g.graph.url&&t.P===t.g.graph.url?m.return():(t.o=!0,t.g.graph&&t.g.graph.url?(t.P=t.g.graph.url,b(m,Ne(t,t.g.graph.url),3)):void(m.g=2));for(2!=m.g&&(e=m.h,t.i.loadGraph(e)),n=i(Object.keys(t.B)),a=n.next();!a.done;a=n.next())r=a.value,t.i.overrideFile(r,t.B[r]);if(t.B={},t.g.listeners)for(s=i(t.g.listeners),o=s.next();!o.done;o=s.next())p=o.value,xe(t,p);u=t.j,t.j={},t.setOptions(u),m.g=0}))}(t),3):b(e,function(t){var e,n,a,r,s,o;return w((function(p){switch(p.g){case 1:if(!t.o)return p.return();if(!t.v){p.g=2;break}e=i(t.v),n=e.next();case 3:if(n.done){p.g=5;break}return b(p,(0,n.value)(),4);case 4:n=e.next(),p.g=3;break;case 5:t.v=void 0;case 2:if(t.A){for(a=new t.h.GraphOptionChangeRequestList,r=i(t.A),s=r.next();!s.done;s=r.next())o=s.value,a.push_back(o);t.i.changeOptions(a),a.delete(),t.A=void 0}t.o=!1,p.g=0}}))}(t),0)}))},t.overrideFile=function(t,e){this.i?this.i.overrideFile(t,e):this.B[t]=e},t.clearOverriddenFiles=function(){this.B={},this.i&&this.i.clearOverriddenFiles()},t.send=function(t,e){var n,a,r,s,o,p,u,m,c,l=this;return w((function(d){switch(d.g){case 1:return l.g.inputs?(n=1e3*(null==e?performance.now():e),b(d,l.C,2)):d.return();case 2:return b(d,l.initialize(),3);case 3:for(a=new l.h.PacketDataList,r=i(Object.keys(t)),s=r.next();!s.done;s=r.next())if(o=s.value,p=l.g.inputs[o]){t:{var h=t[o];switch(p.type){case"video":var f=l.m[p.stream];if(f||(f=new le(l.h,l.D),l.m[p.stream]=f),0===f.l&&(f.l=f.h.createTexture()),"undefined"!=typeof HTMLVideoElement&&h instanceof HTMLVideoElement)var y=h.videoWidth,g=h.videoHeight;else"undefined"!=typeof HTMLImageElement&&h instanceof HTMLImageElement?(y=h.naturalWidth,g=h.naturalHeight):(y=h.width,g=h.height);g={glName:f.l,width:y,height:g},(y=f.g).canvas.width=g.width,y.canvas.height=g.height,y.activeTexture(y.TEXTURE0),f.h.bindTexture2d(f.l),y.texImage2D(y.TEXTURE_2D,0,y.RGBA,y.RGBA,y.UNSIGNED_BYTE,h),f.h.bindTexture2d(0),f=g;break t;case"detections":for((f=l.m[p.stream])||(f=new he(l.h),l.m[p.stream]=f),f.data||(f.data=new f.g.DetectionListData),f.data.reset(h.length),g=0;g<h.length;++g){y=h[g];var N=f.data,x=N.setBoundingBox,T=g,v=y.T,w=new se;if(At(w,1,v.X),At(w,2,v.Y),At(w,3,v.height),At(w,4,v.width),At(w,5,v.rotation),At(w,6,v.W),v=Lt(w,oe),x.call(N,T,v),y.O)for(N=0;N<y.O.length;++N){var _=!!(w=y.O[N]).visibility;T=(x=f.data).addNormalizedLandmark,v=g,w=Object.assign(Object.assign({},w),{visibility:_?w.visibility:0}),At(_=new Zt,1,w.x),At(_,2,w.y),At(_,3,w.z),w.visibility&&At(_,4,w.visibility),w=Lt(_,Jt),T.call(x,v,w)}if(y.M)for(N=0;N<y.M.length;++N)T=(x=f.data).addClassification,v=g,w=y.M[N],At(_=new Ht,2,w.score),w.index&&At(_,1,w.index),w.label&&At(_,3,w.label),w.displayName&&At(_,4,w.displayName),w=Lt(_,Wt),T.call(x,v,w)}f=f.data;break t;default:f={}}}switch(u=f,m=p.stream,p.type){case"video":a.pushTexture2d(Object.assign(Object.assign({},u),{stream:m,timestamp:n}));break;case"detections":(c=u).stream=m,c.timestamp=n,a.pushDetectionList(c);break;default:throw Error("Unknown input config type: '"+p.type+"'")}}return l.i.send(a),b(d,l.C,4);case 4:a.delete(),d.g=0}}))},t.onResults=function(t,e){this.listeners[e||"$"]=t},O("Solution",be),O("OptionType",{BOOL:0,NUMBER:1,Z:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(t=ve.prototype).close=function(){return this.g.close(),Promise.resolve()},t.onResults=function(t){this.g.onResults(t)},t.initialize=function(){var t=this;return w((function(e){return b(e,t.g.initialize(),0)}))},t.reset=function(){this.g.reset()},t.send=function(t){var e=this;return w((function(n){return b(n,e.g.send(t),0)}))},t.setOptions=function(t){this.g.setOptions(t)},O("Hands",ve),O("HAND_CONNECTIONS",[[0,1],[1,2],[2,3],[3,4],[0,5],[5,6],[6,7],[7,8],[5,9],[9,10],[10,11],[11,12],[9,13],[13,14],[14,15],[15,16],[13,17],[0,17],[17,18],[18,19],[19,20]]),O("VERSION","0.4.1635986972")}).call(a.c);var o,i,p={};(0,r.e)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"}(o||(o={})),function(t){var e;(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(i||(i={}));const u={};function m(t){return u[t]}function c(t,e,n,a,r){const o=e.inputParams[t];if(o&&void 0!==o.inputIndexStart){const t=o.inputIndexStart,i=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?t+1:o.inputIndexEnd;if("tensor"===o.type)return l(e.inputNames[o.inputIndexStart],n,a,r);if("tensors"===o.type)return e.inputNames.slice(t,i).map((t=>l(t,n,a,r)));const p=l(e.inputNames.slice(t)[0],n,a,r),u=p.dataSync();return"number"===o.type?u[0]:(0,s.t)(p.shape,u)}const i=e.attrParams[t];return i&&i.value}function l(t,e,n,a){const[r,s]=f(t);if(null!=a){const t=a.getHashTableHandleByName(r);if(null!=t)return t}const o=n.currentContextIds.find((t=>!!e[h(r,t)]));return void 0!==o?e[h(r,o)][s]:void 0}function d(t,e){const[n,a,r]=f(t);return[h(n,e&&e.currentContextId),a,r]}function h(t,e){return e?`${t}-${e}`:t}function f(t){const e=t.split(":");if(1===e.length)return[t,0,void 0];const n=e[0],a=3===e.length?e[1]:void 0;return[n,Number(e[e.length-1]),a]}function y(t,e,n){let a=c("pad",t,e,n);if("explicit"===a){a=c("explicitPaddings",t,e,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)r[t][0]=a[2*t],r[t][1]=a[2*t+1];return r}return a}function g(t){return t.kept?t:(0,r.c)(t)}var b=Object.freeze({__proto__:null,json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),N=Object.freeze({__proto__:null,json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),x=Object.freeze({__proto__:null,json:[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]}),T=Object.freeze({__proto__:null,json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]}),v=Object.freeze({__proto__:null,json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]}),w=Object.freeze({__proto__:null,json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),_=Object.freeze({__proto__:null,json:[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]}),S=Object.freeze({__proto__:null,json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]}),O=Object.freeze({__proto__:null,json:[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]}),A=Object.freeze({__proto__:null,json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]}),M=Object.freeze({__proto__:null,json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),E=Object.freeze({__proto__:null,json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]}),I=Object.freeze({__proto__:null,json:[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]}),k=Object.freeze({__proto__:null,json:[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]}),D=Object.freeze({__proto__:null,json:[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]}),C=Object.freeze({__proto__:null,json:[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]}),F=Object.freeze({__proto__:null,json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]}),V=Object.freeze({__proto__:null,json:[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]}),L=Object.freeze({__proto__:null,json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]});class R{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[b,N,x,T,v,w,_,S,O,A,M,E,I,k,D,C,F,V,L].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,a=[],r=[],s=[],o=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?a.push(t[e.name]):"Const"===e.op?r.push(t[e.name]):null!=e.input&&0!==e.input.length||s.push(t[e.name]),t)),{});let i=[];const p=[];let u={},m={};null!=e&&(u=this.mapSignatureEntries(e.inputs),m=this.mapSignatureEntries(e.outputs));const c=Object.keys(o);c.forEach((t=>{const e=o[t];e.inputNames.forEach(((t,n)=>{const[a,,r]=d(t),s=o[a];if(null!=s.outputs){const t=s.outputs.indexOf(r);if(-1!==t){const r=`${a}:${t}`;e.inputNames[n]=r}}e.inputs.push(s),s.children.push(e)}))})),0===Object.keys(m).length?c.forEach((t=>{const e=o[t];0===e.children.length&&p.push(e)})):Object.keys(m).forEach((t=>{const[e]=d(t),n=o[e];null!=n&&(n.signatureKey=m[t],p.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((t=>{const[e]=d(t),n=o[e];n&&(n.signatureKey=u[t],i.push(n))})):i=a;let l={};null!=t.library&&null!=t.library.function&&(l=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const h={nodes:o,inputs:i,outputs:p,weights:r,placeholders:a,signature:e,functions:l};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=m(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const a=n.type;let r;switch(n.type){case"string":r=j(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=j(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=q(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=q(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=B(t.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=B(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=Y(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Y(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=P(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=P(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=Q(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Q(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=X(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=X(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=K(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=K(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=H(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=H(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=W(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=W(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=U(t.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=U(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:r,type:a},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let a={};null!=e&&(a=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const r=[],s=[];t.signature.inputArg.forEach((t=>{const[e]=d(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:$(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,r.push(n),a[e]=n})),Object.keys(a).forEach((t=>{const e=a[t];e.inputNames.forEach(((t,n)=>{const[r,,s]=d(t),o=a[r];if(null!=o.outputs){const t=o.outputs.indexOf(s);if(-1!==t){const a=`${r}:${t}`;e.inputNames[n]=a}}e.inputs.push(o),o.children.push(e)}))}));const o=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=d(o[t.name]),r=a[e];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(t);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function z(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=(0,r.e)().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function j(t,e,n,a=!1){const r=t[e];return null!=r?z(r.s,a):n}function P(t,e,n){const a=t[e];return a?a.b:n}function B(t,e,n){const a=t[e]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"==typeof r?r:parseInt(r,10)}function $(t){switch("string"==typeof t&&(t=o[t]),t){case o.DT_FLOAT:case o.DT_HALF:return"float32";case o.DT_INT32:case o.DT_INT64:case o.DT_INT8:case o.DT_UINT8:return"int32";case o.DT_BOOL:return"bool";case o.DT_DOUBLE:return"float32";case o.DT_STRING:return"string";default:return null}}function U(t,e,n){const a=t[e];return a&&a.func?a.func.name:n}function H(t,e,n){const a=t[e];return a&&a.type?$(a.type):n}function W(t,e,n){const a=t[e];return a&&a.list&&a.list.type?a.list.type.map((t=>$(t))):n}function G(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function X(t,e,n){const a=t[e];return a&&a.shape?G(a.shape):n}function Y(t,e,n){const a=t[e];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function q(t,e,n,a=!1){const r=t[e];return r&&r.list&&r.list.s?r.list.s.map((t=>z(t,a))):n}function K(t,e,n){const a=t[e];return a&&a.list&&a.list.shape?a.list.shape.map((t=>G(t))):n}function Q(t,e,n){const a=t[e];return a&&a.list&&a.list.b?a.list.b:n}class Z{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return l(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return l(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return B(this.node.rawAttrs,t,e);if(null!=n.s)return j(this.node.rawAttrs,t,e);if(null!=n.b)return P(this.node.rawAttrs,t,e);if(null!=n.shape)return X(this.node.rawAttrs,t,e);if(null!=n.type)return H(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Y(this.node.rawAttrs,t,e);if(null!=n.list.s)return q(this.node.rawAttrs,t,e);if(null!=n.list.shape)return K(this.node.rawAttrs,t,e);if(null!=n.list.b)return Q(this.node.rawAttrs,t,e);if(null!=n.list.type)return W(this.node.rawAttrs,t,e)}return e}}function J(t,e,n=""){if("number"!=typeof t&&"number"!=typeof e){(0,s.a)(t.length===e.length,(()=>n+` Shapes ${t} and ${e} must match`));for(let a=0;a<t.length;a++){const r=t[a],o=e[a];(0,s.a)(r<0||o<0||r===o,(()=>n+` Shapes ${t} and ${e} must match`))}}}function tt(t){return"number"!=typeof t&&!t.some((t=>t<0))}function et(t,e,n){let a=nt(t,n);const r=!tt(a);if(r&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(r&&e.forEach((t=>{a=nt(t.shape,a)})),!tt(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function nt(t,e){if("number"==typeof t)return e;if("number"==typeof e)return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let a=0;a<t.length;++a){const r=t[a],s=e[a];if(r>=0&&s>=0&&r!==s)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[a]=r>=0?r:s}return n}class at{constructor(t,e,n,a,s,o,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=s,this.dynamicSize=o,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,r.f)(0),(0,r.k)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),J(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,(0,r.k)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return(0,r.t)([],[0].concat(this.elementShape));const n=this.readMany(t);return J(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,a.V)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return(0,r.t)([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return J(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,a.W)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,(0,a.X)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const s=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const o=0===n?0:e.size/n,i=[];(0,r.g)((()=>{e=(0,r.h)(e,[1,n,o]);for(let n=0;n<t.length;++n){const p=[0,0===n?0:s[n-1],0],u=[1,t[n],o];i[n]=(0,r.h)((0,a.Y)(e,p,u),this.elementShape)}return i}));const p=[];for(let e=0;e<t.length;e++)p[e]=e;this.writeMany(p,i)}}class rt{constructor(t,e,n,a=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);J(e,t.shape,"TensorList shape mismatch: "),(0,r.k)(t)})),this.idTensor=(0,r.f)(0),this.maxNumElements=a,(0,r.k)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new rt([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);J(t,this.elementShape,"TensorList shape mismatch: ");const s=et(this.elementShape,this.tensors,t);return(0,r.g)((()=>{const t=this.tensors.map((t=>(0,r.h)(t,s)));return(0,a.V)(t,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=et(this.elementShape,this.tensors,t),a=this.tensors.pop();return J(a.shape,t,"TensorList shape mismatch: "),(0,r.h)(a,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(J(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,r.k)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);J(this.tensors[t].shape,e,"TensorList shape mismatch: ");const a=et(this.elementShape,this.tensors,e);return(0,r.h)(this.tensors[t],a)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);J(this.elementShape,e.shape,"TensorList shape mismatch: "),(0,r.k)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);J(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());const s=et(this.elementShape,this.tensors,n);return 0===t.length?(0,r.t)([],[0].concat(s)):(0,r.g)((()=>{const e=t.map((t=>(0,r.h)(this.tensors[t],s)));return(0,a.V)(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);J(this.elementShape,e,"TensorList shape mismatch: ");const n=et(this.elementShape,this.tensors,e);return 0===this.size()?(0,r.t)([],[0].concat(n)):(0,r.g)((()=>{const t=this.tensors.map((t=>(0,r.h)(t,n)));return(0,a.W)(t,0)}))}}function st(t,e,n){const[a,r]=c("fusedOps",t,e,n),s="biasadd"===a,o=!s,i="prelu"===r,p="fusedbatchnorm"===a,u=c("numArgs",t,e,n);if(s){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const m=c("strides",t,e,n),l=y(t,e,n),d=c("dataFormat",t,e,n).toUpperCase(),h=c("dilations",t,e,n);let[f,g]=c("args",t,e,n);return o&&(g=f,f=void 0),{stride:m,pad:l,dataFormat:d,dilations:h,biasArg:f,preluArg:g,activationFunc:r,leakyreluAlpha:c("leakyreluAlpha",t,e,n)}}function ot(t,e,n){return{boxes:c("boxes",t,e,n),scores:c("scores",t,e,n),maxOutputSize:c("maxOutputSize",t,e,n),iouThreshold:c("iouThreshold",t,e,n),scoreThreshold:c("scoreThreshold",t,e,n),softNmsSigma:c("softNmsSigma",t,e,n)}}class it{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=(0,r.f)(0),this.tensorMap=new Map,(0,r.k)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return(0,r.f)(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),(0,r.g)((()=>{const t=(0,a.X)(e),o=n.length,i=t.length;(0,s.a)(o===i,(()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`));for(let e=0;e<o;e++){const a=n[e],s=t[e];(0,r.k)(s),this.tensorMap.set(a,s)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return(0,r.g)((()=>{const t=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,e);t.push(s)}return(0,a.V)(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}function pt(t,e,n,o){const i=((t,e,n)=>{switch(t.category){case"arithmetic":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[(0,a.i)(c("a",t,e,n),c("b",t,e,n))];case"AddN":return[(0,a.h)(c("tensors",t,e,n))];case"FloorMod":case"Mod":return[(0,a.g)(c("a",t,e,n),c("b",t,e,n))];case"Mul":return[(0,r.m)(c("a",t,e,n),c("b",t,e,n))];case"RealDiv":case"Div":return[(0,a.e)(c("a",t,e,n),c("b",t,e,n))];case"DivNoNan":return[(0,a.d)(c("a",t,e,n),c("b",t,e,n))];case"FloorDiv":return[(0,a.f)(c("a",t,e,n),c("b",t,e,n))];case"Sub":return[(0,a.b)(c("a",t,e,n),c("b",t,e,n))];case"Minimum":return[(0,a.a)(c("a",t,e,n),c("b",t,e,n))];case"Maximum":return[(0,a.m)(c("a",t,e,n),c("b",t,e,n))];case"Pow":return[(0,a.p)(c("a",t,e,n),c("b",t,e,n))];case"SquaredDifference":return[(0,a.s)(c("a",t,e,n),c("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[(0,a.U)(c("x",t,e,n))];case"Acos":return[(0,a.T)(c("x",t,e,n))];case"Acosh":return[(0,a.S)(c("x",t,e,n))];case"Asin":return[(0,a.R)(c("x",t,e,n))];case"Asinh":return[(0,a.Q)(c("x",t,e,n))];case"Atan":return[(0,a.P)(c("x",t,e,n))];case"Atan2":return[(0,a.O)(c("x",t,e,n),c("y",t,e,n))];case"Atanh":return[(0,a.N)(c("x",t,e,n))];case"Ceil":return[(0,a.M)(c("x",t,e,n))];case"Complex":return[(0,r.d)(c("real",t,e,n),c("imag",t,e,n))];case"Cos":return[(0,a.L)(c("x",t,e,n))];case"Cosh":return[(0,a.K)(c("x",t,e,n))];case"Elu":return[(0,r.b)(c("x",t,e,n))];case"Erf":return[(0,a.J)(c("x",t,e,n))];case"Exp":return[(0,a.I)(c("x",t,e,n))];case"Expm1":return[(0,a.H)(c("x",t,e,n))];case"Floor":return[(0,a.G)(c("x",t,e,n))];case"Log":return[(0,a.F)(c("x",t,e,n))];case"Log1p":return[(0,a.E)(c("x",t,e,n))];case"Imag":return[(0,a.D)(c("x",t,e,n))];case"Neg":return[(0,a.C)(c("x",t,e,n))];case"Reciprocal":return[(0,a.B)(c("x",t,e,n))];case"Real":return[(0,a.A)(c("x",t,e,n))];case"Relu":return[(0,r.a)(c("x",t,e,n))];case"Round":return[(0,a.z)(c("x",t,e,n))];case"Selu":return[(0,a.y)(c("x",t,e,n))];case"Sigmoid":return[(0,r.s)(c("x",t,e,n))];case"Sin":return[(0,a.x)(c("x",t,e,n))];case"Sign":return[(0,a.w)(c("x",t,e,n))];case"Sinh":return[(0,a.v)(c("x",t,e,n))];case"Softplus":return[(0,a.u)(c("x",t,e,n))];case"Sqrt":return[(0,a.q)(c("x",t,e,n))];case"Square":return[(0,a.o)(c("x",t,e,n))];case"Tanh":return[(0,a.n)(c("x",t,e,n))];case"Tan":return[(0,a.t)(c("x",t,e,n))];case"ClipByValue":return[(0,a.l)(c("x",t,e,n),c("clipValueMin",t,e,n),c("clipValueMax",t,e,n))];case"Relu6":return[(0,r.r)(c("x",t,e,n))];case"Rsqrt":return[(0,a.r)(l(t.inputNames[0],e,n))];case"Prod":return[(0,a.k)(c("x",t,e,n),c("axes",t,e,n))];case"LeakyRelu":return[(0,r.l)(c("x",t,e,n),c("alpha",t,e,n))];case"Prelu":return[(0,r.p)(c("x",t,e,n),c("alpha",t,e,n))];case"IsNan":return[(0,a.j)(l(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const a=c("thenBranch",t,e,n),r=c("elseBranch",t,e,n),s=c("cond",t,e,n),o=c("args",t,e,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=c("body",t,e,n),r=c("cond",t,e,n),s=c("args",t,e,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((t=>t.id));let p=await o[0].data();o.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||t.dispose()}));let u=s;for(;p[0];){const t=u;u=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const e=u.map((t=>t.id));t.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);p=await s[0].data(),s.forEach((t=>{t.kept||-1!==i.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return u}case"LoopCond":return[g(c("pred",t,e,n))];case"Switch":{const a=c("pred",t,e,n);let r=c("data",t,e,n);return r.kept||(r=g(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=t.inputNames.find((t=>void 0!==l(t,e,n)));return a?[g(l(a,e,n))]:void 0}case"Enter":{const a=c("frameName",t,e,n),r=c("tensor",t,e,n);return n.enterFrame(a),[g(r)]}case"Exit":{const a=c("tensor",t,e,n);return n.exitFrame(),[g(a)]}case"NextIteration":{const a=c("tensor",t,e,n);return n.nextIteration(),[g(a)]}case"TensorArrayV3":{const a=c("size",t,e,n),s=c("dtype",t,e,n),o=c("elementShape",t,e,n),i=c("dynamicSize",t,e,n),p=c("clearAfterRead",t,e,n),u=c("identicalElementShapes",t,e,n),m=c("name",t,e,n),l=new at(m,s,a,o,u,i,p);return n.addTensorArray(l),[l.idTensor,(0,r.f)(1)]}case"TensorArrayWriteV3":{const a=c("tensorArrayId",t,e,n),r=c("index",t,e,n),s=c("tensor",t,e,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=c("tensorArrayId",t,e,n),r=c("index",t,e,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=c("tensorArrayId",t,e,n),r=c("indices",t,e,n),s=c("dtype",t,e,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=c("tensorArrayId",t,e,n),r=c("indices",t,e,n),s=c("tensor",t,e,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=c("tensorArrayId",t,e,n),r=n.getTensorArray(a.id),s=c("dtype",t,e,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=c("tensorArrayId",t,e,n),r=c("tensor",t,e,n),s=c("lengths",t,e,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=c("tensorArrayId",t,e,n),s=n.getTensorArray(a.id);return[(0,r.f)(s.size(),"int32")]}case"TensorArrayCloseV3":{const a=c("tensorArrayId",t,e,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=c("tensorListId",t,e,n),r=c("index",t,e,n),s=c("tensor",t,e,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=c("tensorListId",t,e,n),r=c("index",t,e,n),s=c("elementShape",t,e,n),o=c("elementDType",t,e,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=c("indices",t,e,n),s=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const o=new rt([],n,t.dtype,r),i=(0,a.X)(t,0);return e.forEach(((t,e)=>{o.setItem(t,i[e])})),o}(c("tensor",t,e,n),r,c("elementShape",t,e,n),c("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=c("elementShape",t,e,n),r=c("elementDType",t,e,n);let s;s="TensorListReserve"===t.op?"numElements":"maxNumElements";const o=function(t,e,n){return new rt([],t,e,n)}(a,r,c(s,t,e,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const a=c("tensorListId",t,e,n),r=c("indices",t,e,n),s=c("elementShape",t,e,n),o=c("elementDType",t,e,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=c("tensorListId",t,e,n),r=c("elementShape",t,e,n),s=c("elementDType",t,e,n),o=c("numElements",t,e,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);J(t.shape.slice(1),e,"TensorList shape mismatch: ");const s=(0,a.X)(t);return new rt(s,e,r)}(c("tensor",t,e,n),c("elementShape",t,e,n),c("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const a=c("tensorListId",t,e,n),r=n.getTensorList(a.id),s=c("dtype",t,e,n),o=c("elementShape",t,e,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=c("tensorListId",t,e,n),r=c("tensor",t,e,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=c("tensorListId",t,e,n),r=c("elementShape",t,e,n),s=c("elementDType",t,e,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const s=c("tensor",t,e,n),o=c("elementShape",t,e,n),i=function(t,e,n){let s=0;const o=e.map((t=>(s+=t,s)));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${t.shape}`);const i=nt(t.shape.slice(1),n),p=0===s?0:t.size/s,u=(0,r.g)((()=>{const n=[];t=(0,r.h)(t,[1,s,p]);for(let s=0;s<e.length;++s){const u=[0,0===s?0:o[s-1],0],m=[1,e[s],p];n[s]=(0,r.h)((0,a.Y)(t,u,m),i)}return t.dispose(),n})),m=new rt([],n,t.dtype,e.length);for(let t=0;t<u.length;t++)m.setItem(t,u[t]);return m}(s,c("lengths",t,e,n),o);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"convolution":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=c("stride",t,e,n),s=c("pad",t,e,n),o=c("dataFormat",t,e,n).toUpperCase(),i=c("dilation",t,e,n);return[(0,a.a9)(c("x",t,e,n),c("filter",t,e,n),r,s,o,i)]}case"Conv2D":{const r=c("strides",t,e,n),s=y(t,e,n),o=c("dataFormat",t,e,n).toUpperCase(),i=c("dilations",t,e,n);return[(0,a.a8)(c("x",t,e,n),c("filter",t,e,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:p,preluArg:u,activationFunc:m,leakyreluAlpha:l}=st(t,e,n);return[(0,a.a7)({x:c("x",t,e,n),filter:c("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:p,activation:m,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:p,preluArg:u,activationFunc:m,leakyreluAlpha:l}=st(t,e,n);return[(0,a.a6)({x:c("x",t,e,n),filter:c("filter",t,e,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:p,activation:m,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=c("outputShape",t,e,n),s=c("strides",t,e,n),o=y(t,e,n);return[(0,a.a5)(c("x",t,e,n),c("filter",t,e,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=c("strides",t,e,n),s=y(t,e,n),o=c("dilations",t,e,n),i=c("dataFormat",t,e,n).toUpperCase();return[(0,a.a4)(c("input",t,e,n),c("filter",t,e,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=c("strides",t,e,n),s=c("pad",t,e,n),o=c("dataFormat",t,e,n).toUpperCase(),i=c("dilations",t,e,n);return[(0,a.a3)(c("x",t,e,n),c("filter",t,e,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=c("strides",t,e,n),s=c("pad",t,e,n),o=c("kernelSize",t,e,n);return[(0,a.a2)(c("x",t,e,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=c("strides",t,e,n),s=c("pad",t,e,n),o=c("kernelSize",t,e,n);return[(0,a.a1)(c("x",t,e,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=c("strides",t,e,n),s=c("pad",t,e,n),o=c("kernelSize",t,e,n),i=c("includeBatchInIndex",t,e,n),{result:p,indexes:u}=(0,a.a0)(c("x",t,e,n),[o[1],o[2]],[r[1],r[2]],s,i);return[p,u]}case"AvgPool3D":{const r=c("strides",t,e,n),s=c("pad",t,e,n),o=c("kernelSize",t,e,n);return[(0,a.$)(c("x",t,e,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=c("strides",t,e,n),s=c("pad",t,e,n),o=c("kernelSize",t,e,n);return[(0,a._)(c("x",t,e,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=c("strides",t,e,n),s=c("pad",t,e,n),o=c("dilations",t,e,n),i=r[1],p=r[2],u=o[1],m=o[2];return[(0,a.Z)(c("x",t,e,n),c("filter",t,e,n),[i,p],s,[u,m],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=c("shape",t,e,n),s=c("dtype",t,e,n),o=c("value",t,e,n);return[(0,a.aj)(r,o,s)]}case"LinSpace":{const r=c("start",t,e,n),s=c("stop",t,e,n),o=c("num",t,e,n);return[(0,a.ai)(r,s,o)]}case"Multinomial":{const r=c("logits",t,e,n),s=c("numSamples",t,e,n),o=c("seed",t,e,n);return[(0,a.ah)(r,s,o)]}case"OneHot":{const r=c("indices",t,e,n),s=c("depth",t,e,n),o=c("onValue",t,e,n),i=c("offValue",t,e,n);return[(0,a.ag)(r,s,o,i)]}case"Ones":return[(0,a.af)(c("shape",t,e,n),c("dtype",t,e,n))];case"OnesLike":return[(0,a.ae)(c("x",t,e,n))];case"RandomUniform":return[(0,a.ad)(c("shape",t,e,n),c("minval",t,e,n),c("maxval",t,e,n),c("dtype",t,e,n))];case"Range":{const r=c("start",t,e,n),s=c("stop",t,e,n),o=c("step",t,e,n);return[(0,a.ac)(r,s,o,c("dtype",t,e,n))]}case"TruncatedNormal":{const r=c("shape",t,e,n),s=c("mean",t,e,n),o=c("stdDev",t,e,n),i=c("seed",t,e,n);return[(0,a.ab)(r,s,o,c("dtype",t,e,n),i)]}case"Zeros":return[(0,r.z)(c("shape",t,e,n),c("dtype",t,e,n))];case"ZerosLike":return[(0,a.aa)(c("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:p,softNmsSigma:u}=ot(t,e,n),m=await a.am.nonMaxSuppressionWithScoreAsync(r,s,o,i,p,u);return[m.selectedIndices,m.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:p}=ot(t,e,n),u=c("padToMaxOutputSize",t,e,n),m=await a.am.nonMaxSuppressionPaddedAsync(r,s,o,i,p,u);return[m.selectedIndices,m.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:p}=ot(t,e,n);return[await a.am.nonMaxSuppressionAsync(r,s,o,i,p)]}case"Where":{const s=(0,r.i)(c("condition",t,e,n),"bool"),o=[await(0,a.al)(s)];return s.dispose(),o}case"ListDiff":return(0,a.ak)(c("x",t,e,n),c("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=c("x",t,e,n),s=c("k",t,e,n),o=c("sorted",t,e,n),i=(0,a.ao)(r,s,o);return[i.values,i.indices]}case"Unique":{const r=c("x",t,e,n),s=(0,a.an)(r);return[s.values,s.indices]}case"UniqueV2":{const r=c("x",t,e,n),s=c("axis",t,e,n),o=(0,a.an)(r,s);return[o.values,o.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=c("images",t,e,n),s=c("size",t,e,n),o=c("alignCorners",t,e,n),i=c("halfPixelCenters",t,e,n);return[a.am.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=c("images",t,e,n),s=c("size",t,e,n),o=c("alignCorners",t,e,n),i=c("halfPixelCenters",t,e,n);return[a.am.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=c("image",t,e,n),s=c("boxes",t,e,n),o=c("boxInd",t,e,n),i=c("cropSize",t,e,n),p=c("method",t,e,n),u=c("extrapolationValue",t,e,n);return[a.am.cropAndResize(r,s,o,i,p,u)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=c("default",t,e,n);return[l(t.name,e,n)||s];case"Placeholder":return[l(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[g(c("x",t,e,n))];case"IdentityN":return c("x",t,e,n).map((t=>g(t)));case"Shape":return[(0,a.ap)(c("x",t,e,n).shape,"int32")];case"ShapeN":return c("x",t,e,n).map((t=>(0,a.ap)(t.shape)));case"Size":return[(0,r.f)(c("x",t,e,n).size,"int32")];case"Rank":return[(0,r.f)(c("x",t,e,n).rank,"int32")];case"NoOp":return[(0,r.f)(1)];case"Print":const o=c("x",t,e,n),i=c("data",t,e,n),p=c("message",t,e,n),u=c("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(p);for(let t=0;t<i.length;t++)console.log(Array.prototype.slice.call(i[t].dataSync()).slice(0,u));return[o];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"Equal":return[(0,a.az)(c("a",t,e,n),c("b",t,e,n))];case"NotEqual":return[(0,a.ay)(c("a",t,e,n),c("b",t,e,n))];case"Greater":return[(0,a.ax)(c("a",t,e,n),c("b",t,e,n))];case"GreaterEqual":return[(0,a.aw)(c("a",t,e,n),c("b",t,e,n))];case"Less":return[(0,a.av)(c("a",t,e,n),c("b",t,e,n))];case"LessEqual":return[(0,a.au)(c("a",t,e,n),c("b",t,e,n))];case"LogicalAnd":return[(0,a.at)(c("a",t,e,n),c("b",t,e,n))];case"LogicalNot":return[(0,a.as)(c("a",t,e,n))];case"LogicalOr":return[(0,a.ar)(c("a",t,e,n),c("b",t,e,n))];case"Select":case"SelectV2":return[(0,a.aq)(c("condition",t,e,n),c("a",t,e,n),c("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[(0,a.aD)(c("a",t,e,n),c("b",t,e,n),c("transposeA",t,e,n),c("transposeB",t,e,n))];case"Einsum":return[(0,a.aC)(c("equation",t,e,n),...c("tensors",t,e,n))];case"Transpose":return[(0,a.aB)(c("x",t,e,n),c("perm",t,e,n))];case"_FusedMatMul":const[r,s]=c("fusedOps",t,e,n),o="biasadd"===r,i="prelu"===s,p=c("numArgs",t,e,n),u=c("leakyreluAlpha",t,e,n);if(o){if(i&&2!==p)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==p)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[m,l]=c("args",t,e,n);return[(0,a.aA)({a:c("a",t,e,n),b:c("b",t,e,n),transposeA:c("transposeA",t,e,n),transposeB:c("transposeB",t,e,n),bias:m,activation:s,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[(0,a.aI)(c("x",t,e,n),c("mean",t,e,n),c("variance",t,e,n),c("offset",t,e,n),c("scale",t,e,n),c("epsilon",t,e,n))];case"LRN":return[(0,a.aH)(c("x",t,e,n),c("radius",t,e,n),c("bias",t,e,n),c("alpha",t,e,n),c("beta",t,e,n))];case"Softmax":return[(0,a.aG)(c("x",t,e,n))];case"LogSoftmax":return[(0,a.aF)(c("x",t,e,n))];case"SparseToDense":return[(0,a.aE)(c("sparseIndices",t,e,n),c("outputShape",t,e,n),c("sparseValues",t,e,n),c("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"Max":{const r=c("axis",t,e,n),s=c("keepDims",t,e,n);return[(0,a.aS)(c("x",t,e,n),r,s)]}case"Mean":{const r=c("axis",t,e,n),s=c("keepDims",t,e,n);return[(0,a.aR)(c("x",t,e,n),r,s)]}case"Min":{const r=c("axis",t,e,n),s=c("keepDims",t,e,n);return[(0,a.aQ)(c("x",t,e,n),r,s)]}case"Sum":{const a=c("axis",t,e,n),s=c("keepDims",t,e,n);return[(0,r.j)(c("x",t,e,n),a,s)]}case"All":{const r=c("axis",t,e,n),s=c("keepDims",t,e,n);return[(0,a.aP)(c("x",t,e,n),r,s)]}case"Any":{const r=c("axis",t,e,n),s=c("keepDims",t,e,n);return[(0,a.aO)(c("x",t,e,n),r,s)]}case"ArgMax":{const r=c("axis",t,e,n);return[(0,a.aN)(c("x",t,e,n),r)]}case"ArgMin":{const r=c("axis",t,e,n);return[(0,a.aM)(c("x",t,e,n),r)]}case"Prod":{const r=c("axis",t,e,n),s=c("keepDims",t,e,n);return[(0,a.k)(c("x",t,e,n),r,s)]}case"Cumsum":{const r=c("axis",t,e,n),s=c("exclusive",t,e,n),o=c("reverse",t,e,n);return[(0,a.aL)(c("x",t,e,n),r,s,o)]}case"Bincount":const s=c("x",t,e,n),o=c("weights",t,e,n),i=c("size",t,e,n);return[(0,a.aK)(s,o,i)];case"DenseBincount":{const r=c("x",t,e,n),s=c("weights",t,e,n),o=c("size",t,e,n),i=c("binaryOutput",t,e,n);return[(0,a.aJ)(r,s,o,i)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=c("n",t,e,n),s=c("axis",t,e,n);let o=c("tensors",t,e,n);return o=o.slice(0,r),[(0,a.W)(o,s)]}case"Gather":{const s=c("x",t,e,n),o=c("indices",t,e,n);return[(0,a.a_)(s,(0,r.i)(o,"int32"),0)]}case"GatherV2":{const s=c("axis",t,e,n),o=c("batchDims",t,e,n),i=c("x",t,e,n),p=c("indices",t,e,n);return[(0,a.a_)(i,(0,r.i)(p,"int32"),s,o)]}case"Reverse":{const r=c("dims",t,e,n),s=[];for(let t=0;t<r.length;t++)r[t]&&s.push(t);const o=c("x",t,e,n);return[(0,a.aZ)(o,s)]}case"ReverseV2":{const r=c("axis",t,e,n),s=c("x",t,e,n);return[(0,a.aZ)(s,r)]}case"Slice":{const r=c("begin",t,e,n),s=c("size",t,e,n);return[(0,a.Y)(c("x",t,e,n),r,s)]}case"StridedSlice":{const r=c("begin",t,e,n),s=c("end",t,e,n),o=c("strides",t,e,n),i=c("beginMask",t,e,n),p=c("endMask",t,e,n),u=c("ellipsisMask",t,e,n),m=c("newAxisMask",t,e,n),l=c("shrinkAxisMask",t,e,n),d=c("x",t,e,n);return[(0,a.aY)(d,r,s,o,i,p,u,m,l)]}case"Pack":return(0,r.g)((()=>{const o=c("axis",t,e,n),i=c("tensors",t,e,n),p=i[0].shape,u=(0,a.aX)(i[0]).shape,m=i.map((t=>{const e=(0,s.b)(t.shape,p);if(!e&&!(0,s.b)((0,a.aX)(t).shape,u))throw new Error("the input tensors shape does not match");return e?t:(0,r.h)(t,p)}));return[(0,a.V)(m,o)]}));case"Unpack":{const r=c("axis",t,e,n),s=c("tensor",t,e,n);return(0,a.X)(s,r)}case"Tile":{const r=c("reps",t,e,n);return[(0,a.aW)(c("x",t,e,n),r)]}case"Split":case"SplitV":{const r=c("axis",t,e,n),s=c("numOrSizeSplits",t,e,n),o=c("x",t,e,n);return(0,a.aV)(o,s,r)}case"ScatterNd":{const r=c("indices",t,e,n),s=c("values",t,e,n),o=c("shape",t,e,n);return[(0,a.aU)(r,s,o)]}case"GatherNd":{const r=c("x",t,e,n),s=c("indices",t,e,n);return[(0,a.aT)(r,s)]}case"SparseToDense":{const s=c("sparseIndices",t,e,n),o=c("outputShape",t,e,n),i=c("sparseValues",t,e,n),p=c("defaultValue",t,e,n);return[(0,a.aE)(s,i,o,i.dtype===p.dtype?p:(0,r.i)(p,i.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"sparse":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.a$.sparseFillEmptyRows(c("indices",t,e,n),c("values",t,e,n),c("denseShape",t,e,n),c("defaultValue",t,e,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.a$.sparseReshape(c("inputIndices",t,e,n),c("inputShape",t,e,n),c("newShape",t,e,n));return[r,s]}case"SparseSegmentMean":return[a.a$.sparseSegmentMean(c("data",t,e,n),c("indices",t,e,n),c("segmentIds",t,e,n))];case"SparseSegmentSum":return[a.a$.sparseSegmentSum(c("data",t,e,n),c("indices",t,e,n),c("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"FFT":return[(0,a.b3)(c("x",t,e,n))];case"IFFT":return[(0,a.b2)(c("x",t,e,n))];case"RFFT":return[(0,a.b1)(c("x",t,e,n))];case"IRFFT":return[(0,a.b0)(c("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"string":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.b4.stringNGrams(c("data",t,e,n),c("dataSplits",t,e,n),c("separator",t,e,n),c("nGramWidths",t,e,n),c("leftPad",t,e,n),c("rightPad",t,e,n),c("padWidth",t,e,n),c("preserveShortSequences",t,e,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.b4.stringSplit(c("input",t,e,n),c("delimiter",t,e,n),c("skipEmpty",t,e,n));return[r,s,o]}case"StringToHashBucketFast":return[a.b4.stringToHashBucketFast(c("input",t,e,n),c("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return(0,r.g)((()=>((t,e,n)=>{switch(t.op){case"Cast":return[(0,r.i)(c("x",t,e,n),c("dtype",t,e,n))];case"ExpandDims":{const r=c("axis",t,e,n);return[(0,a.bc)(c("x",t,e,n),r)]}case"Squeeze":{const r=c("axis",t,e,n);return[(0,a.aX)(c("x",t,e,n),r)]}case"Reshape":return[(0,r.h)(c("x",t,e,n),c("shape",t,e,n))];case"MirrorPad":return[(0,a.bb)(c("x",t,e,n),c("padding",t,e,n),c("mode",t,e,n))];case"PadV2":case"Pad":return[(0,a.ba)(c("x",t,e,n),c("padding",t,e,n),c("constantValue",t,e,n))];case"SpaceToBatchND":{const r=c("blockShape",t,e,n),s=c("paddings",t,e,n);return[(0,a.b9)(c("x",t,e,n),r,s)]}case"BatchToSpaceND":{const r=c("blockShape",t,e,n),s=c("crops",t,e,n);return[(0,a.b8)(c("x",t,e,n),r,s)]}case"DepthToSpace":{const r=c("blockSize",t,e,n),s=c("dataFormat",t,e,n).toUpperCase();return[(0,a.b7)(c("x",t,e,n),r,s)]}case"BroadcastTo":return[(0,a.b6)(c("x",t,e,n),c("shape",t,e,n))];case"BroadcastArgs":return[(0,a.b5)(c("s0",t,e,n),c("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,a)=>{switch(t.op){case"HashTable":case"HashTableV2":{const r=c("keyDType",t,e,n),s=c("valueDType",t,e,n),o=new it(r,s);return a.addHashTable(t.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=c("tableHandle",t,e,n,a),s=c("keys",t,e,n),o=c("values",t,e,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=c("tableHandle",t,e,n,a),s=c("keys",t,e,n),o=c("defaultValue",t,e,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=c("tableHandle",t,e,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,o);case"custom":const i=m(t.op);if(i&&i.customExecutor)return i.customExecutor(new Z(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return(0,s.i)(i)?i.then((t=>[].concat(t))):[].concat(i)}class ut{constructor(t={},e={},n={},a={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function mt(t,e,n,a){const r=new Set,s=[];let o=null,i=null;const p=new Set,u=Object.keys(t).map((t=>f(t)[0]));let m=[];null!=a&&(m=a.map((t=>f(t.name)[0])));const c=[...e];for(;c.length>0;){const t=c.pop();(ht(t)||ft(t)||yt(t))&&null==o&&(o=t,i=o.children.map((t=>t.name)).filter((t=>r.has(t)))),r.add(t.name),null==n[t.name]&&-1===u.indexOf(t.name)&&-1===m.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{p.has(t.name)||(p.add(t.name),c.push(t))})):s.push(t.name))}return{inputs:t,outputs:e,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}const ct=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],lt=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],dt=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function ht(t){return ct.indexOf(t.op)>=0}function ft(t){return lt.indexOf(t.op)>=0}function yt(t){return dt.indexOf(t.op)>=0}class gt{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new gt(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),a=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+a.join(this.SEPERATOR)}compile(t,e){const n=mt(t,e,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(a.length>0){const n=e.map((t=>t.name)),r=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${a}]`)}return function(t,e,n){const{usedNodes:a,inputs:r}=n,s=[],o=Object.keys(r).map((t=>f(t)[0])).map((e=>t.nodes[e])),i=t.initNodes;o.forEach((t=>{a.has(t.name)&&s.push(t)})),t.weights.forEach((t=>{a.has(t.name)&&s.push(t)})),null!=i&&i.forEach((t=>{a.has(t.name)&&s.push(t)}));const p=new Set,u=[];for(;s.length>0;){const t=s.pop();p.add(t.name),e[t.name]||u.push(t),t.children.forEach((t=>{!p.has(t.name)&&a.has(t.name)&&t.inputs.every((t=>p.has(t.name)))&&s.push(t)}))}return u}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=n.map((t=>this.graph.nodes[f(t)[0]])),o=e.map((t=>f(t)[0]));let i=o.map((t=>this.graph.nodes[t]));this.resetIntermediateTensors(),0===i.length&&(i=this._outputs);const p=this.getCompilationKey(a,i);let u=this.compiledMap.get(p);null==u&&(u=this.compile(t,i),this.compiledMap.set(p,u));const m={},c={};return(0,r.g)((()=>{const n=new ut(this.weightMap,m,c,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=f(e),s=[];s[r]=t[e],a[n]=s}));const r=this.getFrozenTensorIds(a),i={};for(let t=0;t<u.length;t++){const e=u[t];if(!a[e.name]){const t=pt(e,a,n,this._resourceManager);if((0,s.i)(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);a[e.name]=t,this.checkTensorForDisposal(e.name,e,a,n,r,o,i)}}return null==this.parent&&n.dispose(r),e.map((t=>l(t,a,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,a,r,s,o){"control"!==e.category&&-1===s.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(o[t.id]=(o[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const s=function(t,e,n){return e[h(t,n.currentContextId)]}(t.name,n,a);null!=s&&s.forEach((t=>{if(t&&!t.kept&&!r.has(t.id)){const n=o[t.id];if(1===n){if(this.keepTensorForDebug){const[n,r]=d(e.name,a);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][r]=t}else t.dispose();delete o[t.id]}else null!=n&&o[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((t=>this.intermediateTensors[t].forEach((t=>t.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((t=>{this.tensorsMap[t].forEach((t=>{!t||t.kept||t.isDisposed||this.keepIds.has(t.id)||t.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const t in this.intermediateTensors)this.intermediateTensors[t].forEach((t=>t.dispose())),delete this.intermediateTensors[t]}async _executeAsync(t,e,n=!1,a={},s={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=(0,r.e)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(t){console.warn(t.message)}this.resetIntermediateTensors();const o=new ut(this.weightMap,a,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,o,e,n);const i=e.map((t=>l(t,this.tensorsMap,o))),p=i.map((t=>t.id)),u=Object.keys(t).map((e=>t[e].id));return this.keepIds=new Set([...p,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&o.dispose(this.keepIds),i}async executeFunctionAsync(t,e,n){const a=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(a,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,a){const r=Object.keys(t),s=r.map((t=>this.graph.nodes[f(t)[0]])),o=n.map((t=>f(t)[0]));let i=o.map((t=>this.graph.nodes[t]));0===i.length&&(i=this._outputs);const{usedNodes:p,missingInputs:u,dynamicNode:m,syncInputs:c}=mt(t,i,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),h=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,a]=f(e),r=[];r[a]=t[e],h[n]=r}));const y={},g=this.getFrozenTensorIds(h),b={};for(;d.length>0;){const t=this.processStack(s,d,e,h,b,g,o,y,p);await Promise.all(t)}null!=m||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const N=i.filter((t=>!ht(t)&&!l(t.name,h,e))).map((t=>t.name));if(N.length>0){let t="";throw null!=m&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${c}]`),new Error(`Cannot compute the outputs [${N}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${t}`)}return h}processStack(t,e,n,a,r,o,i,p,u){const m=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let l="";if("Enter"===t.node.op&&c("isConstant",t.node,a,n)&&([l]=d(t.node.name,n)),null==a[t.node.name]){const c=pt(t.node,a,n,this._resourceManager);l||([l]=d(t.node.name,n));const h=n.currentContext;(0,s.i)(c)?m.push(c.then((s=>(a[l]=s,n.currentContext=h,this.checkTensorForDisposal(l,t.node,a,n,o,i,p),this.processChildNodes(t.node,e,n,a,r,u),s)))):(a[l]=c,this.checkTensorForDisposal(l,t.node,a,n,o,i,p),this.processChildNodes(t.node,e,n,a,r,u))}else this.processChildNodes(t.node,e,n,a,r,u)}return m}processChildNodes(t,e,n,a,r,s){t.children.forEach((t=>{const[o]=d(t.name,n);!r[o]&&s.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!l(t,a,n)))&&(r[o]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!l(t,a,n)))&&(r[o]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[a]=f(e),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const t=r.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e));(0,s.a)(e,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&(0,s.a)(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=f(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t),{})}checkOutputs(t){t.forEach((t=>{const[e]=f(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class bt{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class Nt{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new bt}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=(0,r.n)(t,this.loadOptions);else{const e=(0,r.o)(t,this.loadOptions);if(0===e.length)e.push((0,r.n)(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const a=(0,r.q)(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new gt(R.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=R.Instance.transformGraph(t.modelInitializer);this.initializer=new gt(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=(0,r.u)(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof r.T||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,a)=>(e[n]=t[a],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function xt(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new Nt(t,e);return await n.load(),n}var Tt=function(){return(Tt=Object.assign||function(t){for(var e,n=1,a=arguments.length;n<a;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};function vt(t,e,n,a){return new(n||(n=Promise))((function(r,s){function o(t){try{p(a.next(t))}catch(t){s(t)}}function i(t){try{p(a.throw(t))}catch(t){s(t)}}function p(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,i)}p((a=a.apply(t,e||[])).next())}))}function wt(t,e){var n,a,r,s,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,a&&(r=2&s[0]?a.return:s[0]?a.throw||((r=a.return)&&r.call(a),0):a.next)&&!(r=r.call(a,s[1])).done)return r;switch(a=0,r&&(s=[2&s[0],r.value]),s[0]){case 0:case 1:r=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,a=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!((r=(r=o.trys).length>0&&r[r.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!r||s[1]>r[0]&&s[1]<r[3])){o.label=s[1];break}if(6===s[0]&&o.label<r[1]){o.label=r[1],r=s;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(s);break}r[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],a=0}finally{n=r=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}var _t=["wrist","thumb_cmc","thumb_mcp","thumb_ip","thumb_tip","index_finger_mcp","index_finger_pip","index_finger_dip","index_finger_tip","middle_finger_mcp","middle_finger_pip","middle_finger_dip","middle_finger_tip","ring_finger_mcp","ring_finger_pip","ring_finger_dip","ring_finger_tip","pinky_finger_mcp","pinky_finger_pip","pinky_finger_dip","pinky_finger_tip"],St={runtime:"mediapipe",maxHands:2,modelType:"full"},Ot=function(){function t(t){var e,n=this;e="lite"===(this.width=0,this.height=0,this.selfieMode=!1,this.handsSolution=new p.Hands({locateFile:function(e,n){return t.solutionPath?t.solutionPath.replace(/\/+$/,"")+"/"+e:n+"/"+e}}),t.modelType)?0:1,this.handsSolution.setOptions({modelComplexity:e,selfieMode:this.selfieMode,maxNumHands:t.maxHands}),this.handsSolution.onResults((function(t){if(n.height=t.image.height,n.width=t.image.width,n.hands=[],null!==t.multiHandLandmarks)for(var e=t.multiHandedness,a=t.multiHandLandmarks,r=t.multiHandWorldLandmarks,s=0;s<e.length;s++)n.hands.push(Tt({},n.translateOutput(a[s],r[s]),{score:e[s].score,handedness:e[s].label}))}))}return t.prototype.translateOutput=function(t,e){var n=this;return{keypoints:t.map((function(t,e){return{x:t.x*n.width,y:t.y*n.height,score:t.visibility,name:_t[e]}})),keypoints3D:e.map((function(t,e){return{x:t.x,y:t.y,z:t.z,score:t.visibility,name:_t[e]}}))}},t.prototype.estimateHands=function(t,e){return vt(this,void 0,void 0,(function(){return wt(this,(function(n){switch(n.label){case 0:return e&&e.flipHorizontal&&e.flipHorizontal!==this.selfieMode&&(this.selfieMode=e.flipHorizontal,this.handsSolution.setOptions({selfieMode:this.selfieMode})),[4,this.handsSolution.send({image:t})];case 1:return n.sent(),[2,this.hands]}}))}))},t.prototype.dispose=function(){this.handsSolution.close()},t.prototype.reset=function(){this.handsSolution.reset(),this.width=0,this.height=0,this.hands=null,this.selfieMode=!1},t.prototype.initialize=function(){return this.handsSolution.initialize()},t}();function At(t){return vt(this,void 0,void 0,(function(){var e,n;return wt(this,(function(a){switch(a.label){case 0:return e=function(t){if(null==t)return Tt({},St);var e=Tt({},t);return e.runtime="mediapipe",null==e.maxHands&&(e.maxHands=St.maxHands),null==e.modelType&&(e.modelType=St.modelType),e}(t),[4,(n=new Ot(e)).initialize()];case 1:return a.sent(),[2,n]}}))}))}function Mt(t){return t.width*t.height}function Et(t){var e=t.xCenter-t.width/2,n=e+t.width,a=t.yCenter-t.height/2;return{xMin:e,xMax:n,yMin:a,yMax:a+t.height,width:t.width,height:t.height}}function It(t,e){var n=Et(t),a=Et(e);if(!function(t,e){return!(t.xMax<e.xMin||e.xMax<t.xMin||t.yMax<e.yMin||e.yMax<t.yMin)}(n,a))return 0;var r=Mt(function(t,e){var n=Math.max(t.xMin,e.xMin),a=Math.min(t.xMax,e.xMax),r=Math.max(t.yMin,e.yMin),s=Math.min(t.yMax,e.yMax);return{xMin:n,xMax:a,yMin:r,yMax:s,width:Math.max(a-n,0),height:Math.max(s-r,0)}}(n,a)),s=Mt(n)+Mt(a)-r;return s>0?r/s:0}function kt(t){return t instanceof r.T?{height:t.shape[0],width:t.shape[1]}:{height:t.height,width:t.width}}function Dt(t){return t-2*Math.PI*Math.floor((t+Math.PI)/(2*Math.PI))}function Ct(t){return t instanceof r.T?t:(0,a.bd)(t)}function Ft(t,e){(0,s.a)(0!==t.width,(function(){return e+" width cannot be 0."})),(0,s.a)(0!==t.height,(function(){return e+" height cannot be 0."}))}function Vt(t,e,n){var s=e.inputResolution,o=e.keepAspectRatio,i=kt(t),p=function(t,e){return e?{xCenter:e.xCenter*t.width,yCenter:e.yCenter*t.height,width:e.width*t.width,height:e.height*t.height,rotation:e.rotation}:{xCenter:.5*t.width,yCenter:.5*t.height,width:t.width,height:t.height,rotation:0}}(i,n),u=function(t,e,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var a=e.height,r=e.width;Ft(e,"targetSize"),Ft(t,"roi");var s,o,i=a/r,p=t.height/t.width,u=0,m=0;return i>p?(s=t.width,o=t.width*i,m=(1-p/i)/2):(s=t.height/i,o=t.height,u=(1-i/p)/2),t.width=s,t.height=o,{top:m,left:u,right:u,bottom:m}}(p,s,o);return{imageTensor:(0,r.g)((function(){var e=Ct(t),n=(0,a.be)(function(t,e,n,a){Ft(a,"inputResolution");var r=1/e.width,s=1/e.height,o=t.xCenter,i=t.yCenter,p=Math.cos(t.rotation),u=Math.sin(t.rotation),m=t.width,c=t.height;return[1/a.width*m*p*1*r*e.width,1/a.height*-c*u*r*e.width,(-.5*m*p*1+.5*c*u+o)*r*e.width,1/a.width*m*u*1*s*e.height,1/a.height*c*p*s*e.height,(-.5*c*p-.5*m*u*1+i)*s*e.height,0,0]}(p,i,0,s),[1,8]);return a.am.transform((0,a.bc)((0,r.i)(e,"float32")),n,"bilinear","nearest",0,[s.height,s.width])})),padding:u}}function Lt(t,e,n,a){return 1===a?.5*(t+e):t+(e-t)*n/(a-1)}function Rt(t,e,n,s){return vt(this,void 0,void 0,(function(){var o,i,p,u,m;return wt(this,(function(c){switch(c.label){case 0:return t.sort((function(t,e){return Math.max.apply(Math,e.score)-Math.max.apply(Math,t.score)})),o=(0,a.be)(t.map((function(t){return[t.locationData.relativeBoundingBox.yMin,t.locationData.relativeBoundingBox.xMin,t.locationData.relativeBoundingBox.yMax,t.locationData.relativeBoundingBox.xMax]}))),i=(0,a.ap)(t.map((function(t){return t.score[0]}))),[4,a.am.nonMaxSuppressionAsync(o,i,e,n,s)];case 1:return[4,(p=c.sent()).array()];case 2:return u=c.sent(),m=t.filter((function(t,e){return u.indexOf(e)>-1})),(0,r.v)([o,i,p]),[2,m]}}))}))}function zt(t,e){return t.map((function(t){var n=Tt({},t,{x:t.x*e.width,y:t.y*e.height});return null!=t.z&&(n.z=t.z*e.width),n}))}function jt(t,e){var n=function(t,e,n,a){var r=(a-n)/255;return{scale:r,offset:n-0*r}}(0,0,e[0],e[1]);return(0,r.g)((function(){return(0,a.i)((0,r.m)(t,n.scale),n.offset)}))}function Pt(t,e,n){return vt(this,void 0,void 0,(function(){var s,o,i,p,u;return wt(this,(function(m){switch(m.label){case 0:return s=t[0],o=t[1],i=function(t,e,n){return(0,r.g)((function(){var s,o,i,p;n.reverseOutputOrder?(o=(0,a.aX)((0,a.Y)(t,[0,n.boxCoordOffset+0],[-1,1])),s=(0,a.aX)((0,a.Y)(t,[0,n.boxCoordOffset+1],[-1,1])),p=(0,a.aX)((0,a.Y)(t,[0,n.boxCoordOffset+2],[-1,1])),i=(0,a.aX)((0,a.Y)(t,[0,n.boxCoordOffset+3],[-1,1]))):(s=(0,a.aX)((0,a.Y)(t,[0,n.boxCoordOffset+0],[-1,1])),o=(0,a.aX)((0,a.Y)(t,[0,n.boxCoordOffset+1],[-1,1])),i=(0,a.aX)((0,a.Y)(t,[0,n.boxCoordOffset+2],[-1,1])),p=(0,a.aX)((0,a.Y)(t,[0,n.boxCoordOffset+3],[-1,1]))),o=(0,a.i)((0,r.m)((0,a.e)(o,n.xScale),e.w),e.x),s=(0,a.i)((0,r.m)((0,a.e)(s,n.yScale),e.h),e.y),n.applyExponentialOnBoxSize?(i=(0,r.m)((0,a.I)((0,a.e)(i,n.hScale)),e.h),p=(0,r.m)((0,a.I)((0,a.e)(p,n.wScale)),e.w)):(i=(0,r.m)((0,a.e)(i,n.hScale),e.h),p=(0,r.m)((0,a.e)(p,n.wScale),e.h));var u=(0,a.b)(s,(0,a.e)(i,2)),m=(0,a.b)(o,(0,a.e)(p,2)),c=(0,a.i)(s,(0,a.e)(i,2)),l=(0,a.i)(o,(0,a.e)(p,2)),d=(0,a.W)([(0,r.h)(u,[n.numBoxes,1]),(0,r.h)(m,[n.numBoxes,1]),(0,r.h)(c,[n.numBoxes,1]),(0,r.h)(l,[n.numBoxes,1])],1);if(n.numKeypoints)for(var h=0;h<n.numKeypoints;++h){var f=n.keypointCoordOffset+h*n.numValuesPerKeypoint,y=void 0,g=void 0;n.reverseOutputOrder?(y=(0,a.aX)((0,a.Y)(t,[0,f],[-1,1])),g=(0,a.aX)((0,a.Y)(t,[0,f+1],[-1,1]))):(g=(0,a.aX)((0,a.Y)(t,[0,f],[-1,1])),y=(0,a.aX)((0,a.Y)(t,[0,f+1],[-1,1])));var b=(0,a.i)((0,r.m)((0,a.e)(y,n.xScale),e.w),e.x),N=(0,a.i)((0,r.m)((0,a.e)(g,n.yScale),e.h),e.y);d=(0,a.W)([d,(0,r.h)(b,[n.numBoxes,1]),(0,r.h)(N,[n.numBoxes,1])],1)}return d}))}(o,e,n),p=(0,r.g)((function(){var t=s;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(t=(0,a.l)(s,-n.scoreClippingThresh,n.scoreClippingThresh)),t=(0,r.s)(t)):t})),[4,Bt(i,p,n)];case 1:return u=m.sent(),(0,r.v)([i,p]),[2,u]}}))}))}function Bt(t,e,n){return vt(this,void 0,void 0,(function(){var a,r,s,o,i,p,u,m,c,l,d,h;return wt(this,(function(f){switch(f.label){case 0:return a=[],[4,t.data()];case 1:return r=f.sent(),[4,e.data()];case 2:for(s=f.sent(),o=0;o<n.numBoxes;++o)if(!(null!=n.minScoreThresh&&s[o]<n.minScoreThresh||(i=o*n.numCoords,p=$t(r[i+0],r[i+1],r[i+2],r[i+3],s[o],n.flipVertically,o),(u=p.locationData.relativeBoundingBox).width<0||u.height<0))){if(n.numKeypoints>0)for((m=p.locationData).relativeKeypoints=[],c=n.numKeypoints*n.numValuesPerKeypoint,l=0;l<c;l+=n.numValuesPerKeypoint)d=i+n.keypointCoordOffset+l,h={x:r[d+0],y:n.flipVertically?1-r[d+1]:r[d+1]},m.relativeKeypoints.push(h);a.push(p)}return[2,a]}}))}))}function $t(t,e,n,a,r,s,o){return{score:[r],ind:o,locationData:{relativeBoundingBox:{xMin:e,yMin:s?1-n:t,xMax:a,yMax:s?1-t:n,width:a-e,height:n-t}}}}function Ut(t,e){return"none"===t?e:function(t){return 1/(1+Math.exp(-t))}(e)}function Ht(t,e,n,a){return vt(this,void 0,void 0,(function(){var r,s,o,i,p,u,m,c;return wt(this,(function(l){switch(l.label){case 0:return n=n||e.flipHorizontally||!1,a=a||e.flipVertically||!1,r=t.size,s=r/e.numLandmarks,[4,t.data()];case 1:for(o=l.sent(),i=[],p=0;p<e.numLandmarks;++p)u=p*s,(c={x:0,y:0}).x=n?e.inputImageWidth-o[u]:o[u],s>1&&(c.y=a?e.inputImageHeight-o[u+1]:o[u+1]),s>2&&(c.z=o[u+2]),s>3&&(c.score=Ut(e.visibilityActivation,o[u+3])),i.push(c);for(m=0;m<i.length;++m)(c=i[m]).x=c.x/e.inputImageWidth,c.y=c.y/e.inputImageHeight,c.z=c.z/e.inputImageWidth/(e.normalizeZ||1);return[2,i]}}))}))}function Wt(t,e,n){var a=t.width,r=t.height,s=t.rotation;if(null==n.rotation&&null==n.rotationDegree||(s=function(t,e){return null!=e.rotation?t+=e.rotation:null!=e.rotationDegree&&(t+=Math.PI*e.rotationDegree/180),Dt(t)}(s,n)),0===s)t.xCenter=t.xCenter+a*n.shiftX,t.yCenter=t.yCenter+r*n.shiftY;else{var o=(e.width*a*n.shiftX*Math.cos(s)-e.height*r*n.shiftY*Math.sin(s))/e.width,i=(e.width*a*n.shiftX*Math.sin(s)+e.height*r*n.shiftY*Math.cos(s))/e.height;t.xCenter=t.xCenter+o,t.yCenter=t.yCenter+i}if(n.squareLong){var p=Math.max(a*e.width,r*e.height);a=p/e.width,r=p/e.height}else if(n.squareShort){var u=Math.min(a*e.width,r*e.height);a=u/e.width,r=u/e.height}return t.width=a*n.scaleX,t.height=r*n.scaleY,t}var Gt,Xt={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},Yt={runtime:"tfjs",modelType:"full",maxHands:2,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/full/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/full/1"},qt={flipHorizontal:!1,staticImageMode:!1},Kt={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2016,numCoords:18,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:7,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.5},Qt={shiftX:0,shiftY:-.5,scaleX:2.6,scaleY:2.6,squareLong:!0},Zt={shiftX:0,shiftY:-.1,scaleX:2,scaleY:2,squareLong:!0},Jt={inputResolution:{width:192,height:192},keepAspectRatio:!0},te={inputResolution:{width:224,height:224},keepAspectRatio:!0},ee={numLandmarks:21,inputImageWidth:224,inputImageHeight:224,normalizeZ:.4,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},ne={numLandmarks:21,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},ae=function(){function t(t,e,n){this.detectorModel=t,this.landmarkModel=e,this.maxHands=n,this.prevHandRectsFromLandmarks=null,this.anchors=function(t){for(var e=[],n=0;n<t.numLayers;){for(var a=[],r=[],s=[],o=[],i=n;i<t.strides.length&&t.strides[i]===t.strides[n];){var p=Lt(t.minScale,t.maxScale,i,t.strides.length);if(0===i&&t.reduceBoxesInLowestLayer)s.push(1),s.push(2),s.push(.5),o.push(.1),o.push(p),o.push(p);else{for(var u=0;u<t.aspectRatios.length;++u)s.push(t.aspectRatios[u]),o.push(p);if(t.interpolatedScaleAspectRatio>0){var m=i===t.strides.length-1?1:Lt(t.minScale,t.maxScale,i+1,t.strides.length);o.push(Math.sqrt(p*m)),s.push(t.interpolatedScaleAspectRatio)}}i++}for(var c=0;c<s.length;++c){var l=Math.sqrt(s[c]);a.push(o[c]/l),r.push(o[c]*l)}var d=0,h=0;if(t.featureMapHeight.length>0)d=t.featureMapHeight[n],h=t.featureMapWidth[n];else{var f=t.strides[n];d=Math.ceil(t.inputSizeHeight/f),h=Math.ceil(t.inputSizeWidth/f)}for(var y=0;y<d;++y)for(var g=0;g<h;++g)for(var b=0;b<a.length;++b){var N={xCenter:(g+t.anchorOffsetX)/h,yCenter:(y+t.anchorOffsetY)/d,width:0,height:0};t.fixedAnchorSize?(N.width=1,N.height=1):(N.width=r[b],N.height=a[b]),e.push(N)}n=i}return e}(Xt);var r=(0,a.ap)(this.anchors.map((function(t){return t.width}))),s=(0,a.ap)(this.anchors.map((function(t){return t.height}))),o=(0,a.ap)(this.anchors.map((function(t){return t.xCenter}))),i=(0,a.ap)(this.anchors.map((function(t){return t.yCenter})));this.anchorTensor={x:o,y:i,w:r,h:s}}return t.prototype.estimateHands=function(t,e){return vt(this,void 0,void 0,(function(){var n,s,o,i,p,u,m,c,l,d,h,f,y,g,b,N,x,T,v=this;return wt(this,(function(w){switch(w.label){case 0:return n=function(t){if(null==t)return Tt({},qt);var e=Tt({},t);return null==e.flipHorizontal&&(e.flipHorizontal=qt.flipHorizontal),null==e.staticImageMode&&(e.staticImageMode=qt.staticImageMode),e}(e),null==t?(this.reset(),[2,[]]):(s=kt(t),o=(0,r.g)((function(){var e=(0,r.i)(Ct(t),"float32");return n.flipHorizontal&&(e=(0,a.aX)(a.am.flipLeftRight((0,a.bc)(e,0)),[0])),e})),i=this.prevHandRectsFromLandmarks,n.staticImageMode||null==i||i.length<this.maxHands?[4,this.detectPalm(o)]:[3,2]);case 1:return 0===(u=w.sent()).length?(this.reset(),o.dispose(),[2,[]]):(m=u.map((function(t){return v.palmDetectionToRoi(t,s)})),p=m,[3,3]);case 2:p=i,w.label=3;case 3:return _=[],[p].forEach((function(t){return t.forEach((function(t){(_=_.filter((function(e){return It(t,e)<=.5}))).push(t)}))})),p=_,[4,Promise.all(p.map((function(t){return v.handLandmarks(t,o)})))];case 4:for(c=w.sent(),l=[],this.prevHandRectsFromLandmarks=[],d=0,h=c;d<h.length;d++)null!=(f=h[d])&&(y=f.landmarks,g=f.worldLandmarks,b=f.handScore,N=f.handedness,this.prevHandRectsFromLandmarks.push(this.handLandmarksToRoi(y,s)),null!=(x=zt(y,s))&&x.forEach((function(t,e){delete t.z,t.name=_t[e]})),null!=(T=g)&&T.forEach((function(t,e){t.name=_t[e]})),l.push({keypoints:x,keypoints3D:T,handedness:N,score:b}));return o.dispose(),[2,l]}var _}))}))},t.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),(0,r.v)([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},t.prototype.reset=function(){this.prevHandRectsFromLandmarks=null},t.prototype.detectPalm=function(t){return vt(this,void 0,void 0,(function(){var e,n,s,o,i,p,u,m,c,l;return wt(this,(function(d){switch(d.label){case 0:return e=Vt(t,Jt),n=e.imageTensor,s=e.padding,o=jt(n,[0,1]),i=function(t,e){return(0,r.g)((function(){var n=function(t){return(0,r.g)((function(){return[(0,a.Y)(t,[0,0,0],[1,-1,1]),(0,a.Y)(t,[0,0,1],[1,-1,-1])]}))}(e.predict(t)),s=n[0],o=n[1];return{boxes:(0,a.aX)(o),logits:(0,a.aX)(s)}}))}(o,this.detectorModel),p=i.boxes,[4,Pt([u=i.logits,p],this.anchorTensor,Kt)];case 1:return 0===(m=d.sent()).length?((0,r.v)([n,o,u,p]),[2,m]):[4,Rt(m,this.maxHands,.3,-1)];case 2:return c=d.sent(),l=function(t,e){void 0===t&&(t=[]);for(var n=e.left,a=e.top,r=e.left+e.right,s=e.top+e.bottom,o=0;o<t.length;o++){var i=t[o],p=i.locationData.relativeBoundingBox,u=(p.xMin-n)/(1-r),m=(p.yMin-a)/(1-s),c=p.width/(1-r),l=p.height/(1-s);p.xMin=u,p.yMin=m,p.width=c,p.height=l;for(var d=0;d<i.locationData.relativeKeypoints.length;++d){var h=i.locationData.relativeKeypoints[d],f=(h.x-n)/(1-r),y=(h.y-a)/(1-s);h.x=f,h.y=y}}return t}(c,s),(0,r.v)([n,o,u,p]),[2,l]}}))}))},t.prototype.palmDetectionToRoi=function(t,e){return Wt(function(t,e,n){var a=t.locationData.relativeBoundingBox,r=function(t,e,n){var a,r=t.locationData,s=n.rotationVectorStartKeypointIndex,o=n.rotationVectorEndKeypointIndex;a=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var i=r.relativeKeypoints[s].x*e.width,p=r.relativeKeypoints[s].y*e.height,u=r.relativeKeypoints[o].x*e.width,m=r.relativeKeypoints[o].y*e.height;return Dt(a-Math.atan2(-(m-p),u-i))}(t,e,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:2,rotationVectorTargetAngleDegree:90});return{xCenter:a.xMin+a.width/2,yCenter:a.yMin+a.height/2,width:a.width,height:a.height,rotation:r}}(t,e),e,Qt)},t.prototype.handLandmarks=function(t,e){return vt(this,void 0,void 0,(function(){var n,a,s,o,i,p,u,m,c,l,d,h,f,y,g,b,N;return wt(this,(function(x){switch(x.label){case 0:return n=Vt(e,te,t),a=n.imageTensor,s=n.padding,o=jt(a,[0,1]),i=this.landmarkModel.execute(o,["Identity_2:0","Identity_1:0","Identity:0","Identity_3:0"]),p=i[0],u=i[1],m=i[2],c=i[3],[4,u.data()];case 1:return(l=x.sent()[0])<.5?((0,r.v)(i),(0,r.v)([a,o]),[2,null]):[4,m.data()];case 2:return d=x.sent()[0],h=d>=.5?"Left":"Right",[4,Ht(p,ee)];case 3:return f=x.sent(),[4,Ht(c,ne)];case 4:return y=x.sent(),g=function(t,e){var n=e.left,a=e.top,r=e.left+e.right,s=e.top+e.bottom;return t.map((function(t){return Tt({},t,{x:(t.x-n)/(1-r),y:(t.y-a)/(1-s),z:t.z/(1-r)})}))}(f,s),b=function(t,e,n){void 0===n&&(n={ignoreRotation:!1});for(var a=[],r=0,s=t;r<s.length;r++){var o=s[r],i=o.x-.5,p=o.y-.5,u=n.ignoreRotation?0:e.rotation,m=Math.cos(u)*i-Math.sin(u)*p,c=Math.sin(u)*i+Math.cos(u)*p;m=m*e.width+e.xCenter,c=c*e.height+e.yCenter;var l=o.z*e.width,d=Tt({},o);d.x=m,d.y=c,d.z=l,a.push(d)}return a}(g,t),N=function(t,e){for(var n=[],a=0,r=t;a<r.length;a++){var s=r[a],o=s.x,i=s.y,p=e.rotation,u=Math.cos(p)*o-Math.sin(p)*i,m=Math.sin(p)*o+Math.cos(p)*i,c=Tt({},s);c.x=u,c.y=m,n.push(c)}return n}(y,t),(0,r.v)(i),(0,r.v)([a,o]),[2,{landmarks:b,worldLandmarks:N,handScore:l,handedness:h}]}}))}))},t.prototype.handLandmarksToRoi=function(t,e){return Wt(function(t,e){for(var n=function(t,e){var n=t[0].x*e.width,a=t[0].y*e.height,r=(t[4].x+t[8].x)/2,s=(t[4].y+t[8].y)/2;return r=(r+t[6].x)/2*e.width,s=(s+t[6].y)/2*e.height,Dt(Math.PI/2-Math.atan2(-(s-a),r-n))}(t,e),a=Dt(-n),r=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY,o=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,p=0,u=t;p<u.length;p++){var m=(y=u[p]).x,c=y.y;r=Math.min(r,m),s=Math.max(s,m),o=Math.min(o,c),i=Math.max(i,c)}var l=(s+r)/2,d=(i+o)/2;r=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY,o=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;for(var h=0,f=t;h<f.length;h++){var y,g=((y=f[h]).x-l)*e.width,b=(y.y-d)*e.height,N=g*Math.cos(a)-b*Math.sin(a),x=g*Math.sin(a)+b*Math.cos(a);r=Math.min(r,N),s=Math.max(s,N),o=Math.min(o,x),i=Math.max(i,x)}var T=(s+r)/2,v=(i+o)/2,w=T*Math.cos(n)-v*Math.sin(n)+e.width*l,_=T*Math.sin(n)+v*Math.cos(n)+e.height*d,S=(s-r)/e.width,O=(i-o)/e.height;return{xCenter:w/e.width,yCenter:_/e.height,width:S,height:O,rotation:n}}([].concat(t.slice(0,4),t.slice(5,7),t.slice(9,11),t.slice(13,15),t.slice(17,19)),e),e,Zt)},t}();function re(t){return vt(this,void 0,void 0,(function(){var e,n,a,r,s,o;return wt(this,(function(i){switch(i.label){case 0:return e=function(t){if(null==t)return Tt({},Yt);var e=Tt({},t);if(e.runtime="tfjs",null==e.maxHands&&(e.maxHands=Yt.maxHands),null==e.modelType&&(e.modelType=Yt.modelType),"lite"!==e.modelType&&"full"!==e.modelType)throw new Error("Model type must be one of lite or full, but got "+e.modelType);return null==e.detectorModelUrl&&("lite"===e.modelType?e.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/lite/1":e.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/full/1"),null==e.landmarkModelUrl&&("lite"===e.modelType?e.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/lite/1":e.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/full/1"),e}(t),n=e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,a=e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([xt(e.detectorModelUrl,{fromTFHub:n}),xt(e.landmarkModelUrl,{fromTFHub:a})])];case 1:return r=i.sent(),s=r[0],o=r[1],[2,new ae(s,o,e.maxHands)]}}))}))}function se(t,e){return vt(this,void 0,void 0,(function(){var n,a;return wt(this,(function(r){if(t===Gt.MediaPipeHands){if(a=void 0,null!=(n=e)){if("tfjs"===n.runtime)return[2,re(n)];if("mediapipe"===n.runtime)return[2,At(n)];a=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+a)}throw new Error(t+" is not a supported model name.")}))}))}(Gt||(Gt={})).MediaPipeHands="MediaPipeHands"}}]);